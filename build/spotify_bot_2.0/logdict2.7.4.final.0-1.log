__main__: None -> <PyScript '__main__' C:\Python27\lib\site-packages\PyInstaller\loader\_pyi_bootstrap.py imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1), ('site', 0, 0, -1), ('pyi_importers', 0, 0, -1), ('warnings', 0, 1, -1), ('encodings', 0, 0, -1)] binaries=[] datas=[]>
sys: None -> <BuiltinModule 'sys' None imports=[] binaries=[] datas=[]>
os: None -> <PyModule 'os' C:\Python27\lib\os.pyc imports=[('subprocess', 1, 0, -1), ('os.path.pardir', 0, 0, -1), ('copy_reg', 0, 0, -1), ('os.path.altsep', 0, 0, -1), ('os.path.devnull', 0, 0, -1), ('posix._exit', 0, 1, -1), ('nt._exit', 0, 1, -1), ('posix', 0, 1, -1), ('os.path.extsep', 0, 0, -1), ('posix.*', 0, 1, -1), ('os.path.pathsep', 0, 0, -1), ('os.path', 0, 0, -1), ('warnings', 1, 0, -1), ('errno', 0, 0, -1), ('posixpath', 0, 1, -1), ('sys', 0, 0, -1), ('UserDict', 0, 1, -1), ('os.path.sep', 0, 0, -1), ('_emx_link', 0, 1, -1), ('ntpath', 0, 1, -1), ('os.path.defpath', 0, 0, -1), ('os2emxpath', 0, 1, -1), ('_emx_link.link', 0, 1, -1), ('nt.*', 0, 1, -1), ('nt', 0, 1, -1), ('os.path.curdir', 0, 0, -1)] binaries=[] datas=[]>
pyi_archive: None -> <PyModule 'pyi_archive' C:\Python27\lib\site-packages\PyInstaller\loader\pyi_archive.pyc imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('marshal', 0, 0, -1), ('os', 1, 1, -1), ('struct', 0, 0, -1), ('imp', 1, 0, -1)] binaries=[] datas=[]>
pyi_os_path: None -> <PyModule 'pyi_os_path' C:\Python27\lib\site-packages\PyInstaller\loader\pyi_os_path.pyc imports=[('sys', 0, 0, -1), ('posix.environ', 0, 1, -1), ('nt.listdir', 0, 1, -1), ('nt.environ', 0, 1, -1), ('posix', 0, 1, -1), ('posix.listdir', 0, 1, -1), ('nt', 0, 1, -1)] binaries=[] datas=[]>
site: None -> <PyModule 'site' C:\Python27\lib\site-packages\PyInstaller\fake\fake-site.pyc imports=[('pydoc', 1, 0, -1)] binaries=[] datas=[]>
pyi_importers: None -> <PyModule 'pyi_importers' C:\Python27\lib\site-packages\PyInstaller\loader\pyi_importers.pyc imports=[('pyi_archive.ZlibArchive', 0, 0, -1), ('imp', 0, 0, -1), ('sys', 0, 0, -1), ('pyi_archive.ArchiveReadError', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1)] binaries=[] datas=[]>
warnings: None -> <PyModule 'warnings' C:\Python27\lib\warnings.pyc imports=[('linecache', 0, 0, -1), ('_warnings.default_action', 0, 0, -1), ('sys', 0, 0, -1), ('_warnings', 0, 0, -1), ('types', 0, 0, -1), ('_warnings.warn', 0, 0, -1), ('_warnings.once_registry', 0, 0, -1), ('_warnings.filters', 0, 0, -1), ('_warnings.warn_explicit', 0, 0, -1), ('re', 1, 0, -1)] binaries=[] datas=[]>
encodings: None -> <PkgModule 'encodings' C:\Python27\lib\encodings\__init__.pyc imports=[('encodings', 0, 0, -1), ('codecs', 0, 0, -1), ('encodings.aliases', 0, 0, -1), ('__builtin__', 0, 0, -1), ('encodings.aliases', 0, 0, -1), ('encodings.ascii', 0, 0, -1), ('encodings.base64_codec', 0, 0, -1), ('encodings.big5', 0, 0, -1), ('encodings.big5hkscs', 0, 0, -1), ('encodings.bz2_codec', 0, 0, -1), ('encodings.charmap', 0, 0, -1), ('encodings.cp037', 0, 0, -1), ('encodings.cp1006', 0, 0, -1), ('encodings.cp1026', 0, 0, -1), ('encodings.cp1140', 0, 0, -1), ('encodings.cp1250', 0, 0, -1), ('encodings.cp1251', 0, 0, -1), ('encodings.cp1252', 0, 0, -1), ('encodings.cp1253', 0, 0, -1), ('encodings.cp1254', 0, 0, -1), ('encodings.cp1255', 0, 0, -1), ('encodings.cp1256', 0, 0, -1), ('encodings.cp1257', 0, 0, -1), ('encodings.cp1258', 0, 0, -1), ('encodings.cp424', 0, 0, -1), ('encodings.cp437', 0, 0, -1), ('encodings.cp500', 0, 0, -1), ('encodings.cp720', 0, 0, -1), ('encodings.cp737', 0, 0, -1), ('encodings.cp775', 0, 0, -1), ('encodings.cp850', 0, 0, -1), ('encodings.cp852', 0, 0, -1), ('encodings.cp855', 0, 0, -1), ('encodings.cp856', 0, 0, -1), ('encodings.cp857', 0, 0, -1), ('encodings.cp858', 0, 0, -1), ('encodings.cp860', 0, 0, -1), ('encodings.cp861', 0, 0, -1), ('encodings.cp862', 0, 0, -1), ('encodings.cp863', 0, 0, -1), ('encodings.cp864', 0, 0, -1), ('encodings.cp865', 0, 0, -1), ('encodings.cp866', 0, 0, -1), ('encodings.cp869', 0, 0, -1), ('encodings.cp874', 0, 0, -1), ('encodings.cp875', 0, 0, -1), ('encodings.cp932', 0, 0, -1), ('encodings.cp949', 0, 0, -1), ('encodings.cp950', 0, 0, -1), ('encodings.euc_jisx0213', 0, 0, -1), ('encodings.euc_jis_2004', 0, 0, -1), ('encodings.euc_jp', 0, 0, -1), ('encodings.euc_kr', 0, 0, -1), ('encodings.gb18030', 0, 0, -1), ('encodings.gb2312', 0, 0, -1), ('encodings.gbk', 0, 0, -1), ('encodings.hex_codec', 0, 0, -1), ('encodings.hp_roman8', 0, 0, -1), ('encodings.hz', 0, 0, -1), ('encodings.idna', 0, 0, -1), ('encodings.iso2022_jp', 0, 0, -1), ('encodings.iso2022_jp_1', 0, 0, -1), ('encodings.iso2022_jp_2', 0, 0, -1), ('encodings.iso2022_jp_2004', 0, 0, -1), ('encodings.iso2022_jp_3', 0, 0, -1), ('encodings.iso2022_jp_ext', 0, 0, -1), ('encodings.iso2022_kr', 0, 0, -1), ('encodings.iso8859_1', 0, 0, -1), ('encodings.iso8859_10', 0, 0, -1), ('encodings.iso8859_11', 0, 0, -1), ('encodings.iso8859_13', 0, 0, -1), ('encodings.iso8859_14', 0, 0, -1), ('encodings.iso8859_15', 0, 0, -1), ('encodings.iso8859_16', 0, 0, -1), ('encodings.iso8859_2', 0, 0, -1), ('encodings.iso8859_3', 0, 0, -1), ('encodings.iso8859_4', 0, 0, -1), ('encodings.iso8859_5', 0, 0, -1), ('encodings.iso8859_6', 0, 0, -1), ('encodings.iso8859_7', 0, 0, -1), ('encodings.iso8859_8', 0, 0, -1), ('encodings.iso8859_9', 0, 0, -1), ('encodings.johab', 0, 0, -1), ('encodings.koi8_r', 0, 0, -1), ('encodings.koi8_u', 0, 0, -1), ('encodings.latin_1', 0, 0, -1), ('encodings.mac_arabic', 0, 0, -1), ('encodings.mac_centeuro', 0, 0, -1), ('encodings.mac_croatian', 0, 0, -1), ('encodings.mac_cyrillic', 0, 0, -1), ('encodings.mac_farsi', 0, 0, -1), ('encodings.mac_greek', 0, 0, -1), ('encodings.mac_iceland', 0, 0, -1), ('encodings.mac_latin2', 0, 0, -1), ('encodings.mac_roman', 0, 0, -1), ('encodings.mac_romanian', 0, 0, -1), ('encodings.mac_turkish', 0, 0, -1), ('encodings.mbcs', 0, 0, -1), ('encodings.palmos', 0, 0, -1), ('encodings.ptcp154', 0, 0, -1), ('encodings.punycode', 0, 0, -1), ('encodings.quopri_codec', 0, 0, -1), ('encodings.raw_unicode_escape', 0, 0, -1), ('encodings.rot_13', 0, 0, -1), ('encodings.shift_jis', 0, 0, -1), ('encodings.shift_jisx0213', 0, 0, -1), ('encodings.shift_jis_2004', 0, 0, -1), ('encodings.string_escape', 0, 0, -1), ('encodings.tis_620', 0, 0, -1), ('encodings.undefined', 0, 0, -1), ('encodings.unicode_escape', 0, 0, -1), ('encodings.unicode_internal', 0, 0, -1), ('encodings.utf_16', 0, 0, -1), ('encodings.utf_16_be', 0, 0, -1), ('encodings.utf_16_le', 0, 0, -1), ('encodings.utf_32', 0, 0, -1), ('encodings.utf_32_be', 0, 0, -1), ('encodings.utf_32_le', 0, 0, -1), ('encodings.utf_7', 0, 0, -1), ('encodings.utf_8', 0, 0, -1), ('encodings.utf_8_sig', 0, 0, -1), ('encodings.uu_codec', 0, 0, -1), ('encodings.zlib_codec', 0, 0, -1)] binaries=[] datas=[]>
subprocess: None -> <PyModule 'subprocess' C:\Python27\lib\subprocess.pyc imports=[('_subprocess.SW_HIDE', 0, 1, -1), ('gc', 0, 0, -1), ('_subprocess.STARTF_USESHOWWINDOW', 0, 1, -1), ('_subprocess', 0, 1, -1), ('sys', 0, 0, -1), ('_subprocess.STARTF_USESTDHANDLES', 0, 1, -1), ('types', 0, 0, -1), ('fcntl', 0, 1, -1), ('os', 0, 0, -1), ('threading', 0, 1, -1), ('_subprocess.STD_INPUT_HANDLE', 0, 1, -1), ('msvcrt', 0, 1, -1), ('_subprocess.CREATE_NEW_PROCESS_GROUP', 0, 1, -1), ('_subprocess.STD_OUTPUT_HANDLE', 0, 1, -1), ('traceback', 0, 0, -1), ('_subprocess.CREATE_NEW_CONSOLE', 0, 1, -1), ('errno', 0, 0, -1), ('signal', 0, 0, -1), ('pickle', 0, 1, -1), ('select', 0, 1, -1), ('_subprocess.STD_ERROR_HANDLE', 0, 1, -1)] binaries=[] datas=[]>
copy_reg: None -> <PyModule 'copy_reg' C:\Python27\lib\copy_reg.pyc imports=[('types.ClassType', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
nt: None -> <BuiltinModule 'nt' None imports=[] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
errno: None -> <BuiltinModule 'errno' None imports=[] binaries=[] datas=[]>
posixpath: None -> <PyModule 'posixpath' C:\Python27\lib\posixpath.pyc imports=[('re', 1, 1, -1), ('pwd', 1, 1, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('genericpath', 0, 0, -1), ('stat', 0, 0, -1), ('genericpath.*', 0, 0, -1)] binaries=[] datas=[]>
UserDict: None -> <PyModule 'UserDict' C:\Python27\lib\UserDict.pyc imports=[('_abcoll', 0, 0, -1), ('copy', 1, 0, -1)] binaries=[] datas=[]>
_emx_link: None -> None
  DEL _emx_link
ntpath: None -> <PyModule 'ntpath' C:\Python27\lib\ntpath.pyc imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('nt._getfullpathname', 0, 0, -1), ('warnings', 0, 0, -1), ('nt._isdir', 0, 0, -1), ('genericpath', 0, 0, -1), ('stat', 0, 0, -1), ('nt', 0, 0, -1), ('string', 1, 0, -1), ('genericpath.*', 0, 0, -1)] binaries=[] datas=[]>
os2emxpath: None -> <PyModule 'os2emxpath' C:\Python27\lib\os2emxpath.pyc imports=[('ntpath.splitdrive', 0, 0, -1), ('ntpath.walk', 0, 0, -1), ('os', 0, 0, -1), ('ntpath.splitext', 0, 0, -1), ('genericpath', 0, 0, -1), ('stat', 0, 0, -1), ('ntpath.isabs', 0, 0, -1), ('ntpath.split', 0, 0, -1), ('ntpath.islink', 0, 0, -1), ('ntpath.expanduser', 0, 0, -1), ('genericpath.*', 0, 0, -1), ('ntpath.expandvars', 0, 0, -1), ('ntpath', 0, 0, -1)] binaries=[] datas=[]>
_emx_link: None -> None
  DEL _emx_link
_subprocess: None -> <BuiltinModule '_subprocess' None imports=[] binaries=[] datas=[]>
gc: None -> <BuiltinModule 'gc' None imports=[] binaries=[] datas=[]>
types: None -> <PyModule 'types' C:\Python27\lib\types.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
fcntl: None -> None
  DEL fcntl
threading: None -> <PyModule 'threading' C:\Python27\lib\threading.pyc imports=[('collections.deque', 0, 0, -1), ('random.random', 1, 0, -1), ('_threading_local.local', 0, 1, -1), ('sys', 0, 0, -1), ('collections', 0, 0, -1), ('thread._local', 0, 0, -1), ('traceback.format_exc', 0, 0, -1), ('warnings', 0, 0, -1), ('time.time', 0, 0, -1), ('thread', 0, 0, -1), ('thread.stack_size', 0, 0, -1), ('time.sleep', 0, 0, -1), ('traceback', 0, 0, -1), ('random', 1, 0, -1), ('time', 0, 0, -1), ('_threading_local', 0, 1, -1)] binaries=[] datas=[]>
msvcrt: None -> <BuiltinModule 'msvcrt' None imports=[] binaries=[] datas=[]>
traceback: None -> <PyModule 'traceback' C:\Python27\lib\traceback.pyc imports=[('linecache', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
signal: None -> <BuiltinModule 'signal' None imports=[] binaries=[] datas=[]>
pickle: None -> <PyModule 'pickle' C:\Python27\lib\pickle.pyc imports=[('re', 0, 0, -1), ('copy_reg.dispatch_table', 0, 0, -1), ('types.*', 0, 0, -1), ('marshal', 0, 0, -1), ('types', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('struct', 0, 0, -1), ('org.python.core', 0, 0, -1), ('copy_reg', 0, 0, -1), ('cStringIO', 0, 0, -1), ('copy_reg._extension_cache', 0, 0, -1), ('doctest', 1, 0, -1), ('StringIO', 0, 1, -1), ('copy_reg._inverted_registry', 0, 0, -1), ('binascii', 0, 0, -1), ('copy_reg._extension_registry', 0, 0, -1), ('org.python.core.PyStringMap', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
select: None -> <ExtensionModule 'select' C:\Python27\DLLs\select.pyd imports=[] binaries=[] datas=[]>
collections: None -> <PyModule 'collections' C:\Python27\lib\collections.pyc imports=[('keyword.iskeyword', 0, 0, -1), ('cPickle.loads', 0, 1, -1), ('itertools.repeat', 0, 0, -1), ('cPickle.dumps', 0, 1, -1), ('_collections', 0, 0, -1), ('_abcoll.*', 0, 0, -1), ('itertools', 0, 0, -1), ('itertools.starmap', 0, 0, -1), ('sys', 0, 0, -1), ('cPickle', 0, 1, -1), ('doctest', 0, 1, -1), ('_collections.defaultdict', 0, 0, -1), ('heapq', 0, 0, -1), ('dummy_thread', 0, 1, -1), ('itertools.imap', 0, 0, -1), ('_abcoll', 0, 0, -1), ('operator.eq', 0, 0, -1), ('itertools.chain', 0, 0, -1), ('keyword', 0, 0, -1), ('thread', 0, 0, -1), ('operator.itemgetter', 0, 0, -1), ('dummy_thread.get_ident', 0, 1, -1), ('operator', 0, 0, -1), ('_collections.deque', 0, 0, -1), ('thread.get_ident', 0, 0, -1)] binaries=[] datas=[]>
random: None -> <PyModule 'random' C:\Python27\lib\random.pyc imports=[('os', 0, 0, -1), ('warnings', 0, 0, -1), ('__future__', 0, 0, -1), ('hashlib', 0, 0, -1), ('math.log', 0, 0, -1), ('math.cos', 0, 0, -1), ('time', 1, 1, -1), ('math.sin', 0, 0, -1), ('math.sqrt', 0, 0, -1), ('math', 0, 0, -1), ('__future__.division', 0, 0, -1), ('os.urandom', 0, 0, -1), ('binascii', 0, 0, -1), ('_random', 0, 0, -1), ('math.acos', 0, 0, -1), ('types', 0, 0, -1), ('types.BuiltinMethodType', 0, 0, -1), ('binascii.hexlify', 0, 0, -1), ('types.MethodType', 0, 0, -1), ('math.exp', 0, 0, -1), ('time', 1, 0, -1), ('math.pi', 0, 0, -1), ('math.e', 0, 0, -1), ('math.ceil', 0, 0, -1), ('warnings.warn', 0, 0, -1)] binaries=[] datas=[]>
_threading_local: None -> <PyModule '_threading_local' C:\Python27\lib\_threading_local.pyc imports=[('threading.current_thread', 0, 0, -1), ('threading', 0, 0, -1), ('threading.RLock', 0, 0, -1), ('threading', 1, 0, -1)] binaries=[] datas=[]>
thread: None -> <BuiltinModule 'thread' None imports=[] binaries=[] datas=[]>
time: None -> <BuiltinModule 'time' None imports=[('_strptime', 0, 0, -1)] binaries=[] datas=[]>
keyword: None -> <PyModule 'keyword' C:\Python27\lib\keyword.pyc imports=[('sys', 1, 0, -1), ('re', 1, 0, -1)] binaries=[] datas=[]>
cPickle: None -> <BuiltinModule 'cPickle' None imports=[('copy_reg', 0, 0, -1), ('types', 0, 0, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
itertools: None -> <BuiltinModule 'itertools' None imports=[] binaries=[] datas=[]>
_collections: None -> <BuiltinModule '_collections' None imports=[] binaries=[] datas=[]>
_abcoll: None -> <PyModule '_abcoll' C:\Python27\lib\_abcoll.pyc imports=[('abc', 0, 0, -1), ('abc.abstractmethod', 0, 0, -1), ('abc.ABCMeta', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
doctest: None -> <PyModule 'doctest' C:\Python27\lib\doctest.pyc imports=[('collections', 0, 0, -1), ('linecache', 0, 0, -1), ('StringIO', 0, 0, -1), ('sys', 0, 0, -1), ('pdb', 0, 0, -1), ('os', 0, 0, -1), ('StringIO.StringIO', 0, 0, -1), ('warnings', 0, 0, -1), ('re', 0, 0, -1), ('__future__', 0, 0, -1), ('inspect', 0, 0, -1), ('collections.namedtuple', 0, 0, -1), ('pdb', 1, 0, -1), ('difflib', 0, 0, -1), ('traceback', 0, 0, -1), ('types', 1, 0, -1), ('unittest', 0, 0, -1), ('tempfile', 0, 0, -1)] binaries=[] datas=[]>
heapq: None -> <PyModule 'heapq' C:\Python27\lib\heapq.pyc imports=[('operator.itemgetter', 0, 0, -1), ('itertools', 0, 0, -1), ('doctest', 0, 1, -1), ('operator', 0, 0, -1), ('itertools.chain', 0, 0, -1), ('itertools.tee', 0, 0, -1), ('itertools.islice', 0, 0, -1), ('itertools.izip', 0, 0, -1), ('_heapq', 0, 0, -1), ('itertools.count', 0, 0, -1), ('itertools.imap', 0, 0, -1), ('_heapq.*', 0, 0, -1)] binaries=[] datas=[]>
dummy_thread: None -> <PyModule 'dummy_thread' C:\Python27\lib\dummy_thread.pyc imports=[('traceback', 0, 0, -1)] binaries=[] datas=[]>
operator: None -> <BuiltinModule 'operator' None imports=[] binaries=[] datas=[]>
re: None -> <PyModule 're' C:\Python27\lib\re.pyc imports=[('sre_constants', 1, 0, -1), ('sys', 0, 0, -1), ('sre_parse', 0, 0, -1), ('sre_constants.BRANCH', 1, 0, -1), ('sre_compile', 0, 0, -1), ('sre_constants.SUBPATTERN', 1, 0, -1), ('copy_reg', 0, 0, -1)] binaries=[] datas=[]>
sre_constants: None -> <PyModule 'sre_constants' C:\Python27\lib\sre_constants.pyc imports=[('_sre', 0, 0, -1), ('_sre.MAXREPEAT', 0, 0, -1)] binaries=[] datas=[]>
sre_parse: None -> <PyModule 'sre_parse' C:\Python27\lib\sre_parse.pyc imports=[('_sre', 0, 0, -1), ('_sre.MAXREPEAT', 0, 0, -1), ('sre_constants', 0, 0, -1), ('sys', 0, 0, -1), ('sre_constants.*', 0, 0, -1)] binaries=[] datas=[]>
sre_compile: None -> <PyModule 'sre_compile' C:\Python27\lib\sre_compile.pyc imports=[('sys', 0, 0, -1), ('sre_constants.*', 0, 0, -1), ('sre_parse', 0, 0, -1), ('_sre.MAXREPEAT', 0, 0, -1), ('sre_constants', 0, 0, -1), ('_sre', 0, 0, -1), ('array', 1, 0, -1)] binaries=[] datas=[]>
_sre: None -> <BuiltinModule '_sre' None imports=[('copy_reg', 0, 0, -1)] binaries=[] datas=[]>
array: None -> <BuiltinModule 'array' None imports=[] binaries=[] datas=[]>
string: None -> <PyModule 'string' C:\Python27\lib\string.pyc imports=[('strop.uppercase', 0, 0, -1), ('re', 0, 0, -1), ('strop', 0, 0, -1), ('strop.lowercase', 0, 0, -1), ('strop.whitespace', 0, 0, -1), ('strop.maketrans', 0, 0, -1)] binaries=[] datas=[]>
strop: None -> <BuiltinModule 'strop' None imports=[] binaries=[] datas=[]>
abc: None -> <PyModule 'abc' C:\Python27\lib\abc.pyc imports=[('_weakrefset.WeakSet', 0, 0, -1), ('_weakrefset', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
_weakrefset: None -> <PyModule '_weakrefset' C:\Python27\lib\_weakrefset.pyc imports=[('_weakref.ref', 0, 0, -1), ('_weakref', 0, 0, -1)] binaries=[] datas=[]>
_weakref: None -> <BuiltinModule '_weakref' None imports=[] binaries=[] datas=[]>
linecache: None -> <PyModule 'linecache' C:\Python27\lib\linecache.pyc imports=[('os', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
StringIO: None -> <PyModule 'StringIO' C:\Python27\lib\StringIO.pyc imports=[('sys', 1, 0, -1), ('errno', 0, 0, -1), ('errno.EINVAL', 0, 0, -1)] binaries=[] datas=[]>
pdb: None -> <PyModule 'pdb' C:\Python27\lib\pdb.pyc imports=[('linecache', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('repr.Repr', 0, 0, -1), ('bdb', 0, 0, -1), ('re', 0, 0, -1), ('pprint', 0, 0, -1), ('pdb', 0, 1, -1), ('shlex', 1, 1, -1), ('repr', 0, 0, -1), ('__main__', 1, 0, -1), ('cmd', 0, 0, -1), ('traceback', 0, 0, -1), ('readline', 1, 0, -1)] binaries=[] datas=[]>
__future__: None -> <PyModule '__future__' C:\Python27\lib\__future__.pyc imports=[] binaries=[] datas=[]>
inspect: None -> <PyModule 'inspect' C:\Python27\lib\inspect.pyc imports=[('collections', 0, 0, -1), ('re', 0, 0, -1), ('dis', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('imp', 0, 0, -1), ('string', 0, 0, -1), ('operator', 0, 0, -1), ('linecache', 0, 0, -1), ('operator.attrgetter', 0, 0, -1), ('collections.namedtuple', 0, 0, -1), ('tokenize', 0, 0, -1)] binaries=[] datas=[]>
difflib: None -> <PyModule 'difflib' C:\Python27\lib\difflib.pyc imports=[('difflib', 1, 0, -1), ('collections', 0, 0, -1), ('re', 0, 0, -1), ('functools', 0, 0, -1), ('functools.reduce', 0, 0, -1), ('doctest', 1, 0, -1), ('re', 1, 0, -1), ('heapq', 0, 0, -1), ('collections.namedtuple', 0, 0, -1)] binaries=[] datas=[]>
unittest: None -> <PkgModule 'unittest' C:\Python27\lib\unittest\__init__.pyc imports=[('loader.findTestCases', 0, 0, 1), ('result.TestResult', 0, 0, 1), ('case.skipIf', 0, 0, 1), ('case.skip', 0, 0, 1), ('case.TestCase', 0, 0, 1), ('main.main', 0, 0, 1), ('signals', 0, 0, 1), ('result', 0, 0, 1), ('loader.TestLoader', 0, 0, 1), ('main.TestProgram', 0, 0, 1), ('suite', 0, 0, 1), ('signals.installHandler', 0, 0, 1), ('case.SkipTest', 0, 0, 1), ('suite.TestSuite', 0, 0, 1), ('runner', 0, 0, 1), ('runner.TextTestResult', 0, 0, 1), ('loader.defaultTestLoader', 0, 0, 1), ('suite.BaseTestSuite', 0, 0, 1), ('loader', 0, 0, 1), ('runner.TextTestRunner', 0, 0, 1), ('case.expectedFailure', 0, 0, 1), ('signals.removeResult', 0, 0, 1), ('main', 0, 0, 1), ('signals.registerResult', 0, 0, 1), ('case.skipUnless', 0, 0, 1), ('signals.removeHandler', 0, 0, 1), ('case.FunctionTestCase', 0, 0, 1), ('case', 0, 0, 1), ('loader.getTestCaseNames', 0, 0, 1), ('loader.makeSuite', 0, 0, 1)] binaries=[] datas=[]>
tempfile: None -> <PyModule 'tempfile' C:\Python27\lib\tempfile.pyc imports=[('os', 0, 0, -1), ('dummy_thread', 0, 1, -1), ('thread', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('cStringIO', 0, 0, -1), ('fcntl', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('random', 0, 0, -1), ('StringIO', 0, 1, -1), ('errno', 0, 0, -1), ('random.Random', 0, 0, -1), ('io', 0, 0, -1)] binaries=[] datas=[]>
repr: None -> <PyModule 'repr' C:\Python27\lib\repr.pyc imports=[('itertools.islice', 0, 0, -1), ('itertools', 0, 0, -1), ('__builtin__', 0, 0, -1)] binaries=[] datas=[]>
bdb: None -> <PyModule 'bdb' C:\Python27\lib\bdb.pyc imports=[('repr', 1, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('fnmatch', 0, 0, -1), ('linecache', 1, 0, -1), ('__main__', 1, 1, -1)] binaries=[] datas=[]>
pprint: None -> <PyModule 'pprint' C:\Python27\lib\pprint.pyc imports=[('cStringIO.StringIO', 0, 0, -1), ('time', 1, 0, -1), ('cStringIO', 0, 0, -1), ('warnings', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
shlex: None -> <PyModule 'shlex' C:\Python27\lib\shlex.pyc imports=[('collections.deque', 0, 0, -1), ('sys', 0, 0, -1), ('collections', 0, 0, -1), ('os.path', 0, 0, -1), ('cStringIO', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('StringIO', 0, 1, -1)] binaries=[] datas=[]>
cmd: None -> <PyModule 'cmd' C:\Python27\lib\cmd.pyc imports=[('sys', 1, 0, -1), ('readline', 1, 1, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
readline: None -> None
  DEL readline
__builtin__: None -> <BuiltinModule '__builtin__' None imports=[] binaries=[] datas=[]>
fnmatch: None -> <PyModule 'fnmatch' C:\Python27\lib\fnmatch.pyc imports=[('re', 0, 0, -1), ('posixpath', 1, 0, -1), ('os', 1, 0, -1)] binaries=[] datas=[]>
pwd: None -> None
  DEL pwd
genericpath: None -> <PyModule 'genericpath' C:\Python27\lib\genericpath.pyc imports=[('os', 0, 0, -1), ('stat', 0, 0, -1)] binaries=[] datas=[]>
stat: None -> <PyModule 'stat' C:\Python27\lib\stat.pyc imports=[] binaries=[] datas=[]>
_warnings: None -> <BuiltinModule '_warnings' None imports=[] binaries=[] datas=[]>
cStringIO: None -> <BuiltinModule 'cStringIO' None imports=[('copy_reg', 0, 0, -1)] binaries=[] datas=[]>
_strptime: None -> <PyModule '_strptime' C:\Python27\lib\_strptime.pyc imports=[('thread.allocate_lock', 0, 0, -1), ('dummy_thread', 0, 0, -1), ('re', 0, 0, -1), ('re.compile', 0, 0, -1), ('re.escape', 0, 0, -1), ('calendar', 0, 0, -1), ('locale', 0, 0, -1), ('datetime.date', 0, 0, -1), ('datetime', 0, 0, -1), ('dummy_thread.allocate_lock', 0, 0, -1), ('thread', 0, 0, -1), ('time', 0, 0, -1), ('re.IGNORECASE', 0, 0, -1)] binaries=[] datas=[]>
calendar: None -> <PyModule 'calendar' C:\Python27\lib\calendar.pyc imports=[('optparse', 1, 0, -1), ('datetime', 0, 0, -1), ('sys', 0, 0, -1), ('locale', 0, 0, -1)] binaries=[] datas=[]>
locale: None -> <PyModule 'locale' C:\Python27\lib\locale.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('_locale', 1, 0, -1), ('os', 1, 0, -1), ('operator', 0, 0, -1), ('_locale', 0, 0, -1), ('_locale.*', 0, 0, -1), ('functools', 0, 0, -1), ('encodings', 0, 0, -1), ('encodings.aliases', 0, 0, -1)] binaries=[] datas=[]>
datetime: None -> <BuiltinModule 'datetime' None imports=[] binaries=[] datas=[]>
optparse: None -> <PyModule 'optparse' C:\Python27\lib\optparse.pyc imports=[('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('__builtin__', 1, 1, -1), ('gettext.gettext', 0, 0, -1), ('textwrap', 0, 0, -1), ('gettext', 0, 0, -1)] binaries=[] datas=[]>
gettext: None -> <PyModule 'gettext' C:\Python27\lib\gettext.pyc imports=[('re', 0, 0, -1), ('locale.normalize', 1, 0, -1), ('sys', 0, 0, -1), ('errno.ENOENT', 0, 0, -1), ('copy', 0, 0, -1), ('os', 0, 0, -1), ('StringIO', 1, 1, -1), ('StringIO.StringIO', 1, 1, -1), ('cStringIO.StringIO', 1, 0, -1), ('struct', 0, 0, -1), ('locale', 1, 0, -1), ('token', 1, 0, -1), ('tokenize', 1, 0, -1), ('__builtin__', 1, 0, -1), ('errno', 0, 0, -1), ('locale', 0, 0, -1), ('cStringIO', 1, 0, -1)] binaries=[] datas=[]>
textwrap: None -> <PyModule 'textwrap' C:\Python27\lib\textwrap.pyc imports=[('re', 0, 0, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
copy: None -> <PyModule 'copy' C:\Python27\lib\copy.pyc imports=[('copy_reg.dispatch_table', 0, 0, -1), ('weakref', 0, 0, -1), ('sys', 1, 1, -1), ('types', 0, 0, -1), ('copy_reg', 0, 0, -1), ('repr', 1, 0, -1), ('org.python.core.PyStringMap', 0, 0, -1), ('org.python.core', 0, 0, -1)] binaries=[] datas=[]>
struct: None -> <PyModule 'struct' C:\Python27\lib\struct.pyc imports=[('_struct.__doc__', 0, 0, -1), ('_struct.*', 0, 0, -1), ('_struct', 0, 0, -1), ('_struct._clearcache', 0, 0, -1)] binaries=[] datas=[]>
token: None -> <PyModule 'token' C:\Python27\lib\token.pyc imports=[('sys', 1, 0, -1), ('re', 1, 0, -1)] binaries=[] datas=[]>
tokenize: None -> <PyModule 'tokenize' C:\Python27\lib\tokenize.pyc imports=[('sys', 0, 1, -1), ('token.*', 0, 0, -1), ('re', 0, 0, -1), ('token', 0, 0, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
_locale: None -> <BuiltinModule '_locale' None imports=[] binaries=[] datas=[]>
functools: None -> <PyModule 'functools' C:\Python27\lib\functools.pyc imports=[('_functools.reduce', 0, 0, -1), ('_functools.partial', 0, 0, -1), ('_functools', 0, 0, -1)] binaries=[] datas=[]>
encodings.aliases: None -> <PyModule 'encodings.aliases' C:\Python27\lib\encodings\aliases.pyc imports=[] binaries=[] datas=[]>
_functools: None -> <BuiltinModule '_functools' None imports=[] binaries=[] datas=[]>
encodings.encodings: None -> None
encodings.codecs: None -> None
codecs: None -> <PyModule 'codecs' C:\Python27\lib\codecs.pyc imports=[('encodings', 0, 1, -1), ('_codecs', 0, 0, -1), ('_codecs.*', 0, 0, -1), ('sys', 0, 0, -1), ('__builtin__', 0, 0, -1), ('encodings', 0, 0, -1)] binaries=[] datas=[]>
encodings.__builtin__: None -> None
encodings.ascii: None -> <PyModule 'encodings.ascii' C:\Python27\lib\encodings\ascii.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.base64_codec: None -> <PyModule 'encodings.base64_codec' C:\Python27\lib\encodings\base64_codec.pyc imports=[('base64', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.big5: None -> <PyModule 'encodings.big5' C:\Python27\lib\encodings\big5.pyc imports=[('_codecs_tw', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.big5hkscs: None -> <PyModule 'encodings.big5hkscs' C:\Python27\lib\encodings\big5hkscs.pyc imports=[('_codecs_hk', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.bz2_codec: None -> <PyModule 'encodings.bz2_codec' C:\Python27\lib\encodings\bz2_codec.pyc imports=[('codecs', 0, 0, -1), ('bz2', 0, 0, -1)] binaries=[] datas=[]>
encodings.charmap: None -> <PyModule 'encodings.charmap' C:\Python27\lib\encodings\charmap.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp037: None -> <PyModule 'encodings.cp037' C:\Python27\lib\encodings\cp037.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1006: None -> <PyModule 'encodings.cp1006' C:\Python27\lib\encodings\cp1006.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1026: None -> <PyModule 'encodings.cp1026' C:\Python27\lib\encodings\cp1026.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1140: None -> <PyModule 'encodings.cp1140' C:\Python27\lib\encodings\cp1140.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1250: None -> <PyModule 'encodings.cp1250' C:\Python27\lib\encodings\cp1250.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1251: None -> <PyModule 'encodings.cp1251' C:\Python27\lib\encodings\cp1251.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1252: None -> <PyModule 'encodings.cp1252' C:\Python27\lib\encodings\cp1252.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1253: None -> <PyModule 'encodings.cp1253' C:\Python27\lib\encodings\cp1253.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1254: None -> <PyModule 'encodings.cp1254' C:\Python27\lib\encodings\cp1254.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1255: None -> <PyModule 'encodings.cp1255' C:\Python27\lib\encodings\cp1255.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1256: None -> <PyModule 'encodings.cp1256' C:\Python27\lib\encodings\cp1256.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1257: None -> <PyModule 'encodings.cp1257' C:\Python27\lib\encodings\cp1257.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1258: None -> <PyModule 'encodings.cp1258' C:\Python27\lib\encodings\cp1258.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp424: None -> <PyModule 'encodings.cp424' C:\Python27\lib\encodings\cp424.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp437: None -> <PyModule 'encodings.cp437' C:\Python27\lib\encodings\cp437.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp500: None -> <PyModule 'encodings.cp500' C:\Python27\lib\encodings\cp500.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp720: None -> <PyModule 'encodings.cp720' C:\Python27\lib\encodings\cp720.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp737: None -> <PyModule 'encodings.cp737' C:\Python27\lib\encodings\cp737.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp775: None -> <PyModule 'encodings.cp775' C:\Python27\lib\encodings\cp775.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp850: None -> <PyModule 'encodings.cp850' C:\Python27\lib\encodings\cp850.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp852: None -> <PyModule 'encodings.cp852' C:\Python27\lib\encodings\cp852.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp855: None -> <PyModule 'encodings.cp855' C:\Python27\lib\encodings\cp855.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp856: None -> <PyModule 'encodings.cp856' C:\Python27\lib\encodings\cp856.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp857: None -> <PyModule 'encodings.cp857' C:\Python27\lib\encodings\cp857.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp858: None -> <PyModule 'encodings.cp858' C:\Python27\lib\encodings\cp858.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp860: None -> <PyModule 'encodings.cp860' C:\Python27\lib\encodings\cp860.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp861: None -> <PyModule 'encodings.cp861' C:\Python27\lib\encodings\cp861.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp862: None -> <PyModule 'encodings.cp862' C:\Python27\lib\encodings\cp862.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp863: None -> <PyModule 'encodings.cp863' C:\Python27\lib\encodings\cp863.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp864: None -> <PyModule 'encodings.cp864' C:\Python27\lib\encodings\cp864.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp865: None -> <PyModule 'encodings.cp865' C:\Python27\lib\encodings\cp865.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp866: None -> <PyModule 'encodings.cp866' C:\Python27\lib\encodings\cp866.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp869: None -> <PyModule 'encodings.cp869' C:\Python27\lib\encodings\cp869.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp874: None -> <PyModule 'encodings.cp874' C:\Python27\lib\encodings\cp874.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp875: None -> <PyModule 'encodings.cp875' C:\Python27\lib\encodings\cp875.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp932: None -> <PyModule 'encodings.cp932' C:\Python27\lib\encodings\cp932.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp949: None -> <PyModule 'encodings.cp949' C:\Python27\lib\encodings\cp949.pyc imports=[('_codecs_kr', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp950: None -> <PyModule 'encodings.cp950' C:\Python27\lib\encodings\cp950.pyc imports=[('_codecs_tw', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.euc_jisx0213: None -> <PyModule 'encodings.euc_jisx0213' C:\Python27\lib\encodings\euc_jisx0213.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.euc_jis_2004: None -> <PyModule 'encodings.euc_jis_2004' C:\Python27\lib\encodings\euc_jis_2004.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.euc_jp: None -> <PyModule 'encodings.euc_jp' C:\Python27\lib\encodings\euc_jp.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.euc_kr: None -> <PyModule 'encodings.euc_kr' C:\Python27\lib\encodings\euc_kr.pyc imports=[('_codecs_kr', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.gb18030: None -> <PyModule 'encodings.gb18030' C:\Python27\lib\encodings\gb18030.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_cn', 0, 0, -1)] binaries=[] datas=[]>
encodings.gb2312: None -> <PyModule 'encodings.gb2312' C:\Python27\lib\encodings\gb2312.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_cn', 0, 0, -1)] binaries=[] datas=[]>
encodings.gbk: None -> <PyModule 'encodings.gbk' C:\Python27\lib\encodings\gbk.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_cn', 0, 0, -1)] binaries=[] datas=[]>
encodings.hex_codec: None -> <PyModule 'encodings.hex_codec' C:\Python27\lib\encodings\hex_codec.pyc imports=[('binascii', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.hp_roman8: None -> <PyModule 'encodings.hp_roman8' C:\Python27\lib\encodings\hp_roman8.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.hz: None -> <PyModule 'encodings.hz' C:\Python27\lib\encodings\hz.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_cn', 0, 0, -1)] binaries=[] datas=[]>
encodings.idna: None -> <PyModule 'encodings.idna' C:\Python27\lib\encodings\idna.pyc imports=[('unicodedata.ucd_3_2_0', 0, 0, -1), ('re', 0, 0, -1), ('unicodedata', 0, 0, -1), ('codecs', 0, 0, -1), ('stringprep', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp: None -> <PyModule 'encodings.iso2022_jp' C:\Python27\lib\encodings\iso2022_jp.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_1: None -> <PyModule 'encodings.iso2022_jp_1' C:\Python27\lib\encodings\iso2022_jp_1.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_2: None -> <PyModule 'encodings.iso2022_jp_2' C:\Python27\lib\encodings\iso2022_jp_2.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_2004: None -> <PyModule 'encodings.iso2022_jp_2004' C:\Python27\lib\encodings\iso2022_jp_2004.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_3: None -> <PyModule 'encodings.iso2022_jp_3' C:\Python27\lib\encodings\iso2022_jp_3.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_ext: None -> <PyModule 'encodings.iso2022_jp_ext' C:\Python27\lib\encodings\iso2022_jp_ext.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_kr: None -> <PyModule 'encodings.iso2022_kr' C:\Python27\lib\encodings\iso2022_kr.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_1: None -> <PyModule 'encodings.iso8859_1' C:\Python27\lib\encodings\iso8859_1.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_10: None -> <PyModule 'encodings.iso8859_10' C:\Python27\lib\encodings\iso8859_10.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_11: None -> <PyModule 'encodings.iso8859_11' C:\Python27\lib\encodings\iso8859_11.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_13: None -> <PyModule 'encodings.iso8859_13' C:\Python27\lib\encodings\iso8859_13.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_14: None -> <PyModule 'encodings.iso8859_14' C:\Python27\lib\encodings\iso8859_14.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_15: None -> <PyModule 'encodings.iso8859_15' C:\Python27\lib\encodings\iso8859_15.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_16: None -> <PyModule 'encodings.iso8859_16' C:\Python27\lib\encodings\iso8859_16.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_2: None -> <PyModule 'encodings.iso8859_2' C:\Python27\lib\encodings\iso8859_2.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_3: None -> <PyModule 'encodings.iso8859_3' C:\Python27\lib\encodings\iso8859_3.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_4: None -> <PyModule 'encodings.iso8859_4' C:\Python27\lib\encodings\iso8859_4.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_5: None -> <PyModule 'encodings.iso8859_5' C:\Python27\lib\encodings\iso8859_5.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_6: None -> <PyModule 'encodings.iso8859_6' C:\Python27\lib\encodings\iso8859_6.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_7: None -> <PyModule 'encodings.iso8859_7' C:\Python27\lib\encodings\iso8859_7.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_8: None -> <PyModule 'encodings.iso8859_8' C:\Python27\lib\encodings\iso8859_8.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_9: None -> <PyModule 'encodings.iso8859_9' C:\Python27\lib\encodings\iso8859_9.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.johab: None -> <PyModule 'encodings.johab' C:\Python27\lib\encodings\johab.pyc imports=[('_codecs_kr', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.koi8_r: None -> <PyModule 'encodings.koi8_r' C:\Python27\lib\encodings\koi8_r.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.koi8_u: None -> <PyModule 'encodings.koi8_u' C:\Python27\lib\encodings\koi8_u.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.latin_1: None -> <PyModule 'encodings.latin_1' C:\Python27\lib\encodings\latin_1.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_arabic: None -> <PyModule 'encodings.mac_arabic' C:\Python27\lib\encodings\mac_arabic.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_centeuro: None -> <PyModule 'encodings.mac_centeuro' C:\Python27\lib\encodings\mac_centeuro.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_croatian: None -> <PyModule 'encodings.mac_croatian' C:\Python27\lib\encodings\mac_croatian.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_cyrillic: None -> <PyModule 'encodings.mac_cyrillic' C:\Python27\lib\encodings\mac_cyrillic.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_farsi: None -> <PyModule 'encodings.mac_farsi' C:\Python27\lib\encodings\mac_farsi.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_greek: None -> <PyModule 'encodings.mac_greek' C:\Python27\lib\encodings\mac_greek.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_iceland: None -> <PyModule 'encodings.mac_iceland' C:\Python27\lib\encodings\mac_iceland.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_latin2: None -> <PyModule 'encodings.mac_latin2' C:\Python27\lib\encodings\mac_latin2.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_roman: None -> <PyModule 'encodings.mac_roman' C:\Python27\lib\encodings\mac_roman.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_romanian: None -> <PyModule 'encodings.mac_romanian' C:\Python27\lib\encodings\mac_romanian.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_turkish: None -> <PyModule 'encodings.mac_turkish' C:\Python27\lib\encodings\mac_turkish.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mbcs: None -> <PyModule 'encodings.mbcs' C:\Python27\lib\encodings\mbcs.pyc imports=[('codecs.mbcs_decode', 0, 0, -1), ('codecs', 0, 0, -1), ('codecs.mbcs_encode', 0, 0, -1)] binaries=[] datas=[]>
encodings.palmos: None -> <PyModule 'encodings.palmos' C:\Python27\lib\encodings\palmos.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.ptcp154: None -> <PyModule 'encodings.ptcp154' C:\Python27\lib\encodings\ptcp154.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.punycode: None -> <PyModule 'encodings.punycode' C:\Python27\lib\encodings\punycode.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.quopri_codec: None -> <PyModule 'encodings.quopri_codec' C:\Python27\lib\encodings\quopri_codec.pyc imports=[('quopri', 0, 0, -1), ('cStringIO', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('StringIO', 0, 1, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.raw_unicode_escape: None -> <PyModule 'encodings.raw_unicode_escape' C:\Python27\lib\encodings\raw_unicode_escape.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.rot_13: None -> <PyModule 'encodings.rot_13' C:\Python27\lib\encodings\rot_13.pyc imports=[('sys', 0, 1, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.shift_jis: None -> <PyModule 'encodings.shift_jis' C:\Python27\lib\encodings\shift_jis.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.shift_jisx0213: None -> <PyModule 'encodings.shift_jisx0213' C:\Python27\lib\encodings\shift_jisx0213.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.shift_jis_2004: None -> <PyModule 'encodings.shift_jis_2004' C:\Python27\lib\encodings\shift_jis_2004.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.string_escape: None -> <PyModule 'encodings.string_escape' C:\Python27\lib\encodings\string_escape.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.tis_620: None -> <PyModule 'encodings.tis_620' C:\Python27\lib\encodings\tis_620.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.undefined: None -> <PyModule 'encodings.undefined' C:\Python27\lib\encodings\undefined.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.unicode_escape: None -> <PyModule 'encodings.unicode_escape' C:\Python27\lib\encodings\unicode_escape.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.unicode_internal: None -> <PyModule 'encodings.unicode_internal' C:\Python27\lib\encodings\unicode_internal.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_16: None -> <PyModule 'encodings.utf_16' C:\Python27\lib\encodings\utf_16.pyc imports=[('codecs', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_16_be: None -> <PyModule 'encodings.utf_16_be' C:\Python27\lib\encodings\utf_16_be.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_16_le: None -> <PyModule 'encodings.utf_16_le' C:\Python27\lib\encodings\utf_16_le.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_32: None -> <PyModule 'encodings.utf_32' C:\Python27\lib\encodings\utf_32.pyc imports=[('codecs', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_32_be: None -> <PyModule 'encodings.utf_32_be' C:\Python27\lib\encodings\utf_32_be.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_32_le: None -> <PyModule 'encodings.utf_32_le' C:\Python27\lib\encodings\utf_32_le.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_7: None -> <PyModule 'encodings.utf_7' C:\Python27\lib\encodings\utf_7.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_8: None -> <PyModule 'encodings.utf_8' C:\Python27\lib\encodings\utf_8.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_8_sig: None -> <PyModule 'encodings.utf_8_sig' C:\Python27\lib\encodings\utf_8_sig.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.uu_codec: None -> <PyModule 'encodings.uu_codec' C:\Python27\lib\encodings\uu_codec.pyc imports=[('cStringIO.StringIO', 1, 0, -1), ('binascii.a2b_uu', 1, 0, -1), ('binascii', 1, 0, -1), ('binascii.b2a_uu', 1, 0, -1), ('binascii', 0, 0, -1), ('codecs', 0, 0, -1), ('cStringIO', 1, 0, -1)] binaries=[] datas=[]>
encodings.zlib_codec: None -> <PyModule 'encodings.zlib_codec' C:\Python27\lib\encodings\zlib_codec.pyc imports=[('zlib', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
_codecs: None -> <BuiltinModule '_codecs' None imports=[] binaries=[] datas=[]>
encodings.base64: None -> None
base64: None -> <PyModule 'base64' C:\Python27\lib\base64.pyc imports=[('sys', 1, 0, -1), ('binascii', 0, 0, -1), ('re', 0, 0, -1), ('struct', 0, 0, -1), ('getopt', 1, 0, -1)] binaries=[] datas=[]>
binascii: None -> <BuiltinModule 'binascii' None imports=[] binaries=[] datas=[]>
getopt: None -> <PyModule 'getopt' C:\Python27\lib\getopt.pyc imports=[('sys', 0, 1, -1), ('os', 0, 0, -1)] binaries=[] datas=[]>
_struct: None -> <BuiltinModule '_struct' None imports=[] binaries=[] datas=[]>
encodings._codecs_tw: None -> None
_codecs_tw: None -> <BuiltinModule '_codecs_tw' None imports=[] binaries=[] datas=[]>
encodings._multibytecodec: None -> None
_multibytecodec: None -> <BuiltinModule '_multibytecodec' None imports=[] binaries=[] datas=[]>
encodings._codecs_hk: None -> None
_codecs_hk: None -> <BuiltinModule '_codecs_hk' None imports=[] binaries=[] datas=[]>
encodings.bz2: None -> None
bz2: None -> <ExtensionModule 'bz2' C:\Python27\DLLs\bz2.pyd imports=[] binaries=[] datas=[]>
encodings._codecs_jp: None -> None
_codecs_jp: None -> <BuiltinModule '_codecs_jp' None imports=[] binaries=[] datas=[]>
encodings._codecs_kr: None -> None
_codecs_kr: None -> <BuiltinModule '_codecs_kr' None imports=[] binaries=[] datas=[]>
encodings._codecs_cn: None -> None
_codecs_cn: None -> <BuiltinModule '_codecs_cn' None imports=[] binaries=[] datas=[]>
encodings.binascii: None -> None
encodings.unicodedata: None -> None
unicodedata: None -> <ExtensionModule 'unicodedata' C:\Python27\DLLs\unicodedata.pyd imports=[] binaries=[] datas=[]>
encodings.re: None -> None
encodings.stringprep: None -> None
stringprep: None -> <PyModule 'stringprep' C:\Python27\lib\stringprep.pyc imports=[('unicodedata', 0, 0, -1), ('unicodedata.ucd_3_2_0', 0, 0, -1)] binaries=[] datas=[]>
encodings._codecs_iso2022: None -> None
_codecs_iso2022: None -> <BuiltinModule '_codecs_iso2022' None imports=[] binaries=[] datas=[]>
encodings.quopri: None -> None
quopri: None -> <PyModule 'quopri' C:\Python27\lib\quopri.pyc imports=[('cStringIO.StringIO', 1, 0, -1), ('getopt', 1, 0, -1), ('binascii.a2b_qp', 0, 0, -1), ('binascii.b2a_qp', 0, 0, -1), ('sys', 1, 0, -1), ('binascii', 0, 0, -1), ('cStringIO', 1, 0, -1)] binaries=[] datas=[]>
encodings.cStringIO: None -> None
encodings.StringIO: None -> None
encodings.sys: None -> None
encodings.zlib: None -> None
zlib: None -> <BuiltinModule 'zlib' None imports=[] binaries=[] datas=[]>
weakref: None -> <PyModule 'weakref' C:\Python27\lib\weakref.pyc imports=[('_weakrefset', 0, 0, -1), ('_weakref.ProxyType', 0, 0, -1), ('exceptions.ReferenceError', 0, 0, -1), ('_weakref.getweakrefcount', 0, 0, -1), ('copy.deepcopy', 1, 0, -1), ('_weakref.ref', 0, 0, -1), ('_weakref.ReferenceType', 0, 0, -1), ('exceptions', 0, 0, -1), ('_weakref.getweakrefs', 0, 0, -1), ('_weakref.CallableProxyType', 0, 0, -1), ('copy', 1, 0, -1), ('_weakrefset.WeakSet', 0, 0, -1), ('UserDict', 0, 0, -1), ('_weakref', 0, 0, -1), ('_weakref.proxy', 0, 0, -1)] binaries=[] datas=[]>
org: None -> None
  DEL org
org: None -> None
  DEL org
exceptions: None -> <BuiltinModule 'exceptions' None imports=[] binaries=[] datas=[]>
readline: None -> None
  DEL readline
dis: None -> <PyModule 'dis' C:\Python27\lib\dis.pyc imports=[('opcode', 0, 0, -1), ('opcode.*', 0, 0, -1), ('opcode.__all__', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
imp: None -> <BuiltinModule 'imp' None imports=[] binaries=[] datas=[]>
opcode: None -> <PyModule 'opcode' C:\Python27\lib\opcode.pyc imports=[] binaries=[] datas=[]>
_heapq: None -> <BuiltinModule '_heapq' None imports=[] binaries=[] datas=[]>
unittest.loader: None -> <PyModule 'unittest.loader' C:\Python27\lib\unittest\loader.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('fnmatch.fnmatch', 0, 0, -1), ('fnmatch', 0, 0, -1), ('functools.cmp_to_key', 0, 0, -1), ('suite', 0, 0, 1), ('traceback', 0, 0, -1), ('case', 0, 0, 1), ('functools', 0, 0, -1), ('', 0, 0, 1)] binaries=[] datas=[]>
unittest.result: None -> <PyModule 'unittest.result' C:\Python27\lib\unittest\result.pyc imports=[('functools.wraps', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('StringIO.StringIO', 0, 0, -1), ('StringIO', 0, 0, -1), ('traceback', 0, 0, -1), ('util', 0, 0, 1), ('functools', 0, 0, -1), ('', 0, 0, 1)] binaries=[] datas=[]>
unittest.case: None -> <PyModule 'unittest.case' C:\Python27\lib\unittest\case.pyc imports=[('util._count_diff_hashable', 0, 0, 1), ('collections', 0, 0, -1), ('re', 0, 0, -1), ('util._count_diff_all_purpose', 0, 0, 1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('', 0, 0, 1), ('warnings', 0, 0, -1), ('util.safe_repr', 0, 0, 1), ('util.unorderable_list_difference', 0, 0, 1), ('difflib', 0, 0, -1), ('util.strclass', 0, 0, 1), ('pprint', 0, 0, -1), ('result', 0, 0, 1), ('util', 0, 0, 1), ('functools', 0, 0, -1)] binaries=[] datas=[]>
unittest.main: None -> <PyModule 'unittest.main' C:\Python27\lib\unittest\main.pyc imports=[('runner', 0, 0, 1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('', 0, 0, 1), ('loader', 0, 0, 1), ('optparse', 1, 0, -1), ('getopt', 1, 0, -1), ('signals.installHandler', 0, 0, 1), ('signals', 0, 0, 1)] binaries=[] datas=[]>
unittest.signals: None -> <PyModule 'unittest.signals' C:\Python27\lib\unittest\signals.pyc imports=[('functools', 0, 0, -1), ('functools.wraps', 0, 0, -1), ('signal', 0, 0, -1), ('weakref', 0, 0, -1)] binaries=[] datas=[]>
unittest.suite: None -> <PyModule 'unittest.suite' C:\Python27\lib\unittest\suite.pyc imports=[('util', 0, 0, 1), ('case', 0, 0, 1), ('', 0, 0, 1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
unittest.runner: None -> <PyModule 'unittest.runner' C:\Python27\lib\unittest\runner.pyc imports=[('result', 0, 0, 1), ('sys', 0, 0, -1), ('', 0, 0, 1), ('signals', 0, 0, 1), ('time', 0, 0, -1), ('signals.registerResult', 0, 0, 1)] binaries=[] datas=[]>
unittest.re: None -> None
unittest.sys: None -> None
unittest.types: None -> None
unittest.os: None -> None
unittest.fnmatch: None -> None
unittest.functools: None -> None
unittest.traceback: None -> None
unittest.util: None -> <PyModule 'unittest.util' C:\Python27\lib\unittest\util.pyc imports=[('collections', 0, 0, -1), ('collections.namedtuple', 0, 0, -1), ('collections.OrderedDict', 0, 0, -1)] binaries=[] datas=[]>
unittest.collections: None -> None
unittest.warnings: None -> None
unittest.difflib: None -> None
unittest.pprint: None -> None
unittest.StringIO: None -> None
unittest.optparse: None -> None
unittest.getopt: None -> None
unittest.time: None -> None
unittest.signal: None -> None
unittest.weakref: None -> None
fcntl: None -> None
  DEL fcntl
io: None -> <PyModule 'io' C:\Python27\lib\io.pyc imports=[('_io.BytesIO', 0, 0, -1), ('_io.BufferedRWPair', 0, 0, -1), ('_io.FileIO', 0, 0, -1), ('_io', 0, 0, -1), ('_io.IncrementalNewlineDecoder', 0, 0, -1), ('_io.UnsupportedOperation', 0, 0, -1), ('_io.BufferedWriter', 0, 0, -1), ('abc', 0, 0, -1), ('_io.open', 0, 0, -1), ('_io.TextIOWrapper', 0, 0, -1), ('_io.BufferedRandom', 0, 0, -1), ('_io.DEFAULT_BUFFER_SIZE', 0, 0, -1), ('_io.BlockingIOError', 0, 0, -1), ('_io.BufferedReader', 0, 0, -1), ('_io.StringIO', 0, 0, -1)] binaries=[] datas=[]>
hashlib: None -> <PyModule 'hashlib' C:\Python27\lib\hashlib.pyc imports=[('_sha256', 1, 1, -1), ('logging', 0, 1, -1), ('_sha512', 1, 1, -1), ('_sha', 1, 1, -1), ('_md5', 1, 1, -1), ('_hashlib', 0, 0, -1)] binaries=[] datas=[]>
math: None -> <BuiltinModule 'math' None imports=[] binaries=[] datas=[]>
_random: None -> <BuiltinModule '_random' None imports=[] binaries=[] datas=[]>
_sha256: None -> <BuiltinModule '_sha256' None imports=[] binaries=[] datas=[]>
logging: None -> <PkgModule 'logging' C:\Python27\lib\logging\__init__.pyc imports=[('threading', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('atexit', 0, 0, -1), ('thread', 0, 0, -1), ('cStringIO', 0, 0, -1), ('traceback', 0, 0, -1), ('codecs', 0, 0, -1), ('time', 0, 0, -1), ('weakref', 0, 0, -1)] binaries=[] datas=[]>
_sha512: None -> <BuiltinModule '_sha512' None imports=[] binaries=[] datas=[]>
_sha: None -> <BuiltinModule '_sha' None imports=[] binaries=[] datas=[]>
_md5: None -> <BuiltinModule '_md5' None imports=[] binaries=[] datas=[]>
_hashlib: None -> <ExtensionModule '_hashlib' C:\Python27\DLLs\_hashlib.pyd imports=[] binaries=[] datas=[]>
logging.threading: None -> None
logging.sys: None -> None
logging.os: None -> None
logging.warnings: None -> None
logging.atexit: None -> None
atexit: None -> <PyModule 'atexit' C:\Python27\lib\atexit.pyc imports=[('traceback', 1, 1, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
logging.thread: None -> None
logging.cStringIO: None -> None
logging.traceback: None -> None
logging.codecs: None -> None
logging.time: None -> None
logging.weakref: None -> None
_io: None -> <BuiltinModule '_io' None imports=[] binaries=[] datas=[]>
marshal: None -> <BuiltinModule 'marshal' None imports=[] binaries=[] datas=[]>
org: None -> None
  DEL org
org: None -> None
  DEL org
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
pydoc: None -> <PyModule 'pydoc' C:\Python27\lib\pydoc.pyc imports=[('collections.deque', 0, 0, -1), ('string.rfind', 0, 0, -1), ('tty', 1, 0, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('pkgutil', 0, 0, -1), ('string.rstrip', 0, 0, -1), ('getopt', 1, 0, -1), ('pydoc_data.topics', 1, 0, -1), ('string.find', 0, 0, -1), ('traceback.extract_tb', 0, 0, -1), ('sys', 0, 0, -1), ('formatter', 1, 1, -1), ('string.join', 0, 0, -1), ('string', 0, 0, -1), ('webbrowser', 1, 0, -1), ('repr', 0, 0, -1), ('string.expandtabs', 0, 0, -1), ('BaseHTTPServer', 1, 0, -1), ('collections', 0, 0, -1), ('string.split', 0, 0, -1), ('types', 0, 0, -1), ('StringIO', 1, 1, -1), ('repr.Repr', 0, 0, -1), ('string.strip', 0, 0, -1), ('re', 0, 0, -1), ('threading', 1, 0, -1), ('tempfile', 1, 0, -1), ('string.lower', 0, 0, -1), ('inspect', 0, 0, -1), ('select', 1, 0, -1), ('nturl2path', 1, 1, -1), ('imp', 0, 0, -1), ('mimetools', 1, 0, -1), ('__builtin__', 0, 0, -1), ('traceback', 0, 0, -1)] binaries=[] datas=[]>
tty: None -> <PyModule 'tty' C:\Python27\lib\tty.pyc imports=[('termios.*', 0, 0, -1), ('termios', 0, 0, -1)] binaries=[] datas=[]>
pkgutil: None -> <PyModule 'pkgutil' C:\Python27\lib\pkgutil.pyc imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('os.path', 0, 0, -1), ('zipimport.zipimporter', 0, 0, -1), ('zipimport', 0, 0, -1), ('marshal', 1, 0, -1), ('types.ModuleType', 0, 0, -1), ('inspect', 1, 0, -1)] binaries=[] datas=[]>
pydoc_data: None -> <PkgModule 'pydoc_data' C:\Python27\lib\pydoc_data\__init__.pyc imports=[] binaries=[] datas=[]>
pydoc_data.topics: None -> <PyModule 'pydoc_data.topics' C:\Python27\lib\pydoc_data\topics.pyc imports=[] binaries=[] datas=[]>
formatter: None -> <PyModule 'formatter' C:\Python27\lib\formatter.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
webbrowser: None -> <PyModule 'webbrowser' C:\Python27\lib\webbrowser.pyc imports=[('sys', 0, 0, -1), ('copy', 1, 1, -1), ('os', 0, 0, -1), ('glob', 1, 0, -1), ('tempfile', 1, 0, -1), ('stat', 0, 0, -1), ('subprocess', 0, 0, -1), ('pwd', 1, 0, -1), ('getopt', 1, 0, -1), ('socket', 1, 0, -1), ('time', 0, 0, -1), ('shlex', 0, 0, -1)] binaries=[] datas=[]>
BaseHTTPServer: None -> <PyModule 'BaseHTTPServer' C:\Python27\lib\BaseHTTPServer.pyc imports=[('sys', 0, 0, -1), ('warnings', 0, 0, -1), ('socket', 0, 0, -1), ('SocketServer', 0, 0, -1), ('warnings.catch_warnings', 0, 0, -1), ('mimetools', 0, 0, -1), ('warnings.filterwarnings', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
nturl2path: None -> <PyModule 'nturl2path' C:\Python27\lib\nturl2path.pyc imports=[('urllib', 1, 0, -1), ('string', 1, 0, -1)] binaries=[] datas=[]>
mimetools: None -> <PyModule 'mimetools' C:\Python27\lib\mimetools.pyc imports=[('warnings.warnpy3k', 0, 0, -1), ('sys', 0, 0, -1), ('uu', 1, 1, -1), ('os', 0, 0, -1), ('rfc822', 0, 0, -1), ('quopri', 1, 1, -1), ('warnings', 0, 0, -1), ('dummy_thread', 0, 1, -1), ('socket', 1, 1, -1), ('thread', 0, 0, -1), ('warnings.catch_warnings', 0, 0, -1), ('time', 1, 0, -1), ('base64', 1, 1, -1), ('warnings.filterwarnings', 0, 0, -1), ('tempfile', 0, 0, -1)] binaries=[] datas=[]>
termios: None -> None
  DEL termios
termios: None -> None
  DEL termios
zipimport: None -> <BuiltinModule 'zipimport' None imports=[] binaries=[] datas=[]>
glob: None -> <PyModule 'glob' C:\Python27\lib\glob.pyc imports=[('os', 0, 0, -1), ('re', 0, 0, -1), ('sys', 0, 0, -1), ('fnmatch', 0, 0, -1)] binaries=[] datas=[]>
pwd: None -> None
  DEL pwd
socket: None -> <PyModule 'socket' C:\Python27\lib\socket.pyc imports=[('_ssl.SSL_ERROR_EOF', 0, 1, -1), ('functools.partial', 0, 0, -1), ('_ssl.RAND_add', 0, 1, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('_ssl.RAND_egd', 0, 1, -1), ('_ssl', 0, 1, -1), ('sys', 0, 0, -1), ('ssl', 1, 0, -1), ('cStringIO', 0, 0, -1), ('_ssl.SSL_ERROR_INVALID_ERROR_CODE', 0, 1, -1), ('_ssl.SSL_ERROR_WANT_X509_LOOKUP', 0, 1, -1), ('_ssl.SSL_ERROR_WANT_CONNECT', 0, 1, -1), ('_ssl.SSL_ERROR_SYSCALL', 0, 1, -1), ('_ssl.SSL_ERROR_WANT_WRITE', 0, 1, -1), ('_socket.*', 0, 0, -1), ('types', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_READ', 0, 1, -1), ('_ssl', 0, 0, -1), ('_socket', 0, 0, -1), ('_ssl.RAND_status', 0, 1, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('errno', 0, 0, -1), ('_ssl.SSL_ERROR_SSL', 0, 1, -1), ('_ssl.SSL_ERROR_ZERO_RETURN', 0, 1, -1), ('functools', 0, 0, -1), ('types.MethodType', 0, 0, -1), ('_ssl.SSLError', 0, 1, -1), ('StringIO', 0, 1, -1)] binaries=[] datas=[]>
_ssl: None -> <ExtensionModule '_ssl' C:\Python27\DLLs\_ssl.pyd imports=[] binaries=[] datas=[]>
ssl: None -> <PyModule 'ssl' C:\Python27\lib\ssl.pyc imports=[('_ssl.OPENSSL_VERSION', 0, 0, -1), ('_ssl.SSL_ERROR_INVALID_ERROR_CODE', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_X509_LOOKUP', 0, 0, -1), ('_ssl.RAND_status', 0, 0, -1), ('_ssl.SSL_ERROR_SYSCALL', 0, 0, -1), ('socket._fileobject', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_WRITE', 0, 0, -1), ('_ssl.SSL_ERROR_SSL', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_READ', 0, 0, -1), ('_ssl.OPENSSL_VERSION_INFO', 0, 0, -1), ('_ssl.PROTOCOL_TLSv1', 0, 0, -1), ('_ssl.PROTOCOL_SSLv3', 0, 0, -1), ('_ssl.SSL_ERROR_ZERO_RETURN', 0, 0, -1), ('_ssl.SSL_ERROR_EOF', 0, 0, -1), ('_ssl.RAND_add', 0, 0, -1), ('_ssl.OPENSSL_VERSION_NUMBER', 0, 0, -1), ('_ssl.CERT_REQUIRED', 0, 0, -1), ('_ssl.SSLError', 0, 0, -1), ('textwrap', 0, 0, -1), ('socket.error', 0, 0, -1), ('socket', 0, 0, -1), ('_ssl', 0, 0, -1), ('base64', 0, 0, -1), ('_ssl.PROTOCOL_SSLv23', 0, 0, -1), ('errno', 0, 0, -1), ('_ssl.RAND_egd', 0, 0, -1), ('_ssl.CERT_OPTIONAL', 0, 0, -1), ('_ssl.CERT_NONE', 0, 0, -1), ('socket._delegate_methods', 0, 0, -1), ('time', 1, 0, -1), ('socket.socket', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_CONNECT', 0, 0, -1), ('socket.getnameinfo', 0, 0, -1), ('_ssl.PROTOCOL_SSLv2', 0, 0, -1)] binaries=[] datas=[]>
_socket: None -> <ExtensionModule '_socket' C:\Python27\DLLs\_socket.pyd imports=[] binaries=[] datas=[]>
SocketServer: None -> <PyModule 'SocketServer' C:\Python27\lib\SocketServer.pyc imports=[('threading', 0, 0, -1), ('sys', 0, 0, -1), ('select', 0, 0, -1), ('os', 0, 0, -1), ('StringIO', 1, 1, -1), ('StringIO.StringIO', 1, 1, -1), ('cStringIO.StringIO', 1, 0, -1), ('socket', 0, 0, -1), ('errno', 0, 0, -1), ('cStringIO', 1, 0, -1), ('dummy_threading', 0, 1, -1), ('traceback', 1, 0, -1)] binaries=[] datas=[]>
dummy_threading: None -> <PyModule 'dummy_threading' C:\Python27\lib\dummy_threading.pyc imports=[('dummy_thread', 0, 0, -1), ('threading', 0, 0, -1), ('sys', 0, 0, -1), ('_dummy_threading', 0, 0, -1), ('_dummy_threading.__all__', 0, 0, -1), ('_dummy_threading.*', 0, 0, -1), ('sys.modules', 0, 0, -1)] binaries=[] datas=[]>
_dummy_threading: None -> None
  DEL _dummy_threading
_dummy_threading: None -> None
  DEL _dummy_threading
_dummy_threading: None -> None
  DEL _dummy_threading
uu: None -> <PyModule 'uu' C:\Python27\lib\uu.pyc imports=[('optparse', 1, 0, -1), ('binascii', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1)] binaries=[] datas=[]>
rfc822: None -> <PyModule 'rfc822' C:\Python27\lib\rfc822.pyc imports=[('sys', 0, 1, -1), ('warnings', 0, 0, -1), ('warnings.warnpy3k', 0, 0, -1), ('time', 0, 0, -1), ('os', 0, 1, -1)] binaries=[] datas=[]>
urllib: None -> <PyModule 'urllib' C:\Python27\lib\urllib.pyc imports=[('ssl', 0, 0, -1), ('cStringIO.StringIO', 1, 0, -1), ('os', 0, 0, -1), ('email.utils', 1, 0, -1), ('StringIO', 1, 1, -1), ('nturl2path.url2pathname', 0, 1, -1), ('re', 1, 0, -1), ('cStringIO', 1, 1, -1), ('_scproxy._get_proxy_settings', 0, 1, -1), ('tempfile', 1, 1, -1), ('ftplib', 1, 0, -1), ('fnmatch', 1, 0, -1), ('re', 1, 1, -1), ('sys', 0, 0, -1), ('_scproxy', 0, 1, -1), ('mimetools', 1, 0, -1), ('warnings.warnpy3k', 1, 0, -1), ('string', 0, 0, -1), ('cStringIO.StringIO', 1, 1, -1), ('nturl2path.pathname2url', 0, 1, -1), ('warnings', 1, 0, -1), ('time', 0, 0, -1), ('_scproxy._get_proxies', 0, 1, -1), ('rourl2path.pathname2url', 0, 1, -1), ('urlparse', 0, 0, -1), ('mimetypes', 1, 0, -1), ('rourl2path', 0, 1, -1), ('socket', 0, 0, -1), ('base64', 0, 0, -1), ('ftplib', 1, 1, -1), ('getpass', 1, 0, -1), ('cStringIO', 1, 0, -1), ('re', 0, 0, -1), ('httplib', 1, 0, -1), ('urlparse.urljoin', 0, 0, -1), ('rourl2path.url2pathname', 0, 1, -1), ('nturl2path', 0, 1, -1), ('_winreg', 1, 0, -1), ('mimetools', 1, 1, -1), ('fnmatch.fnmatch', 1, 0, -1), ('socket', 1, 0, -1), ('StringIO.StringIO', 1, 1, -1)] binaries=[] datas=[]>
email: None -> <PkgModule 'email' C:\Python27\lib\email\__init__.pyc imports=[('email.mime', 0, 0, -1), ('email.parser.Parser', 1, 0, -1), ('sys', 0, 0, -1), ('email.parser', 1, 0, -1), ('email.charset', 0, 0, -1), ('email.encoders', 0, 0, -1), ('email.errors', 0, 0, -1), ('email.feedparser', 0, 0, -1), ('email.generator', 0, 0, -1), ('email.header', 0, 0, -1), ('email.iterators', 0, 0, -1), ('email.message', 0, 0, -1), ('email.parser', 0, 0, -1), ('email.utils', 0, 0, -1), ('email.base64mime', 0, 0, -1), ('email.quoprimime', 0, 0, -1), ('email.mime.audio', 0, 0, -1), ('email.mime.base', 0, 0, -1), ('email.mime.image', 0, 0, -1), ('email.mime.message', 0, 0, -1), ('email.mime.multipart', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1), ('email.mime.text', 0, 0, -1)] binaries=[] datas=[]>
email.utils: None -> <PyModule 'email.utils' C:\Python27\lib\email\utils.pyc imports=[('email._parseaddr', 0, 0, -1), ('email.encoders', 0, 0, -1), ('re', 0, 0, -1), ('email._parseaddr.parsedate', 0, 0, -1), ('email._parseaddr.parsedate_tz', 0, 0, -1), ('email._parseaddr.quote', 0, 0, -1), ('os', 0, 0, -1), ('urllib', 1, 0, -1), ('email._parseaddr.mktime_tz', 0, 0, -1), ('warnings', 0, 0, -1), ('quopri.decodestring', 0, 0, -1), ('socket', 0, 0, -1), ('email.encoders._qencode', 0, 0, -1), ('random', 0, 0, -1), ('urllib', 0, 0, -1), ('base64', 0, 0, -1), ('email.encoders._bencode', 0, 0, -1), ('time', 0, 0, -1), ('quopri', 0, 0, -1), ('email._parseaddr.AddressList', 0, 0, -1)] binaries=[] datas=[]>
_scproxy: None -> None
  DEL _scproxy
ftplib: None -> <PyModule 'ftplib' C:\Python27\lib\ftplib.pyc imports=[('ssl', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('re', 1, 1, -1), ('socket', 0, 0, -1), ('socket._GLOBAL_DEFAULT_TIMEOUT', 0, 0, -1), ('SOCKS', 0, 0, -1), ('socket', 0, 1, -1), ('socket.getfqdn', 0, 0, -1)] binaries=[] datas=[]>
_scproxy: None -> None
  DEL _scproxy
_scproxy: None -> None
  DEL _scproxy
rourl2path: None -> None
  DEL rourl2path
urlparse: None -> <PyModule 'urlparse' C:\Python27\lib\urlparse.pyc imports=[('collections', 0, 0, -1), ('re', 0, 0, -1), ('collections.namedtuple', 0, 0, -1)] binaries=[] datas=[]>
mimetypes: None -> <PyModule 'mimetypes' C:\Python27\lib\mimetypes.pyc imports=[('_winreg', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('urllib', 0, 0, -1), ('posixpath', 0, 0, -1), ('getopt', 0, 1, -1)] binaries=[] datas=[]>
rourl2path: None -> None
  DEL rourl2path
getpass: None -> <PyModule 'getpass' C:\Python27\lib\getpass.pyc imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('EasyDialogs', 0, 1, -1), ('warnings', 0, 0, -1), ('EasyDialogs.AskPassword', 0, 1, -1), ('msvcrt', 1, 0, -1), ('msvcrt', 0, 1, -1), ('pwd', 1, 0, -1), ('termios', 0, 0, -1), ('os', 1, 0, -1)] binaries=[] datas=[]>
httplib: None -> <PyModule 'httplib' C:\Python27\lib\httplib.pyc imports=[('sys.py3kwarning', 0, 0, -1), ('ssl', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('array', 0, 0, -1), ('warnings', 0, 0, -1), ('socket', 0, 0, -1), ('cStringIO', 0, 0, -1), ('mimetools', 0, 0, -1), ('array.array', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('StringIO', 0, 1, -1), ('urlparse.urlsplit', 0, 0, -1), ('urlparse', 0, 0, -1), ('_ssl', 0, 0, -1), ('ssl', 0, 0, -1)] binaries=[] datas=[]>
rourl2path: None -> None
  DEL rourl2path
_winreg: None -> <BuiltinModule '_winreg' None imports=[] binaries=[] datas=[]>
email.email: None -> None
email.mime: None -> <PkgModule 'email.mime' C:\Python27\lib\email\mime\__init__.pyc imports=[] binaries=[] datas=[]>
email.parser: None -> <PyModule 'email.parser' C:\Python27\lib\email\parser.pyc imports=[('email.message', 0, 0, -1), ('warnings', 0, 0, -1), ('cStringIO', 0, 0, -1), ('email.feedparser', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('email.feedparser.FeedParser', 0, 0, -1), ('email.message.Message', 0, 0, -1)] binaries=[] datas=[]>
email.sys: None -> None
email.charset: None -> <PyModule 'email.charset' C:\Python27\lib\email\charset.pyc imports=[('email.encoders', 0, 0, -1), ('email.quoprimime', 0, 0, -1), ('email', 0, 0, -1), ('email.errors', 0, 0, -1), ('email.base64mime', 0, 0, -1), ('email.encoders.encode_7or8bit', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
email.encoders: None -> <PyModule 'email.encoders' C:\Python27\lib\email\encoders.pyc imports=[('base64', 0, 0, -1), ('quopri.encodestring', 0, 0, -1), ('quopri', 0, 0, -1)] binaries=[] datas=[]>
email.errors: None -> <PyModule 'email.errors' C:\Python27\lib\email\errors.pyc imports=[] binaries=[] datas=[]>
email.feedparser: None -> <PyModule 'email.feedparser' C:\Python27\lib\email\feedparser.pyc imports=[('email.errors', 0, 0, -1), ('re', 0, 0, -1), ('email', 0, 0, -1), ('email.message', 0, 0, -1)] binaries=[] datas=[]>
email.generator: None -> <PyModule 'email.generator' C:\Python27\lib\email\generator.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('warnings', 0, 0, -1), ('email.header.Header', 0, 0, -1), ('email.header', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('cStringIO', 0, 0, -1), ('random', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
email.header: None -> <PyModule 'email.header' C:\Python27\lib\email\header.pyc imports=[('re', 0, 0, -1), ('email.quoprimime', 0, 0, -1), ('email.errors', 0, 0, -1), ('email.charset.Charset', 0, 0, -1), ('email.base64mime', 0, 0, -1), ('email.errors.HeaderParseError', 0, 0, -1), ('binascii', 0, 0, -1), ('email.charset', 0, 0, -1)] binaries=[] datas=[]>
email.iterators: None -> <PyModule 'email.iterators' C:\Python27\lib\email\iterators.pyc imports=[('cStringIO.StringIO', 0, 0, -1), ('cStringIO', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
email.message: None -> <PyModule 'email.message' C:\Python27\lib\email\message.pyc imports=[('re', 0, 0, -1), ('email.iterators', 1, 0, -1), ('email', 0, 0, -1), ('email.errors', 0, 0, -1), ('email.iterators.walk', 1, 0, -1), ('warnings', 0, 0, -1), ('email.generator.Generator', 1, 0, -1), ('cStringIO', 0, 0, -1), ('email.utils', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('binascii', 0, 0, -1), ('email.charset', 0, 0, -1), ('uu', 0, 0, -1), ('email.generator', 1, 0, -1), ('email.iterators', 0, 0, -1), ('email.generator', 0, 0, -1)] binaries=[] datas=[]>
email.base64mime: None -> <PyModule 'email.base64mime' C:\Python27\lib\email\base64mime.pyc imports=[('email.utils.fix_eols', 0, 0, -1), ('binascii', 0, 0, -1), ('email.utils', 0, 0, -1), ('binascii.a2b_base64', 0, 0, -1), ('binascii.b2a_base64', 0, 0, -1)] binaries=[] datas=[]>
email.quoprimime: None -> <PyModule 'email.quoprimime' C:\Python27\lib\email\quoprimime.pyc imports=[('string.hexdigits', 0, 0, -1), ('re', 0, 0, -1), ('email.utils.fix_eols', 0, 0, -1), ('string', 0, 0, -1), ('email.utils', 0, 0, -1)] binaries=[] datas=[]>
email.mime.audio: None -> <PyModule 'email.mime.audio' C:\Python27\lib\email\mime\audio.pyc imports=[('email.encoders', 0, 0, -1), ('email', 0, 0, -1), ('sndhdr', 0, 0, -1), ('email.mime.nonmultipart.MIMENonMultipart', 0, 0, -1), ('cStringIO', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1)] binaries=[] datas=[]>
email.mime.base: None -> <PyModule 'email.mime.base' C:\Python27\lib\email\mime\base.pyc imports=[('email', 0, 0, -1), ('email.message', 0, 0, -1)] binaries=[] datas=[]>
email.mime.image: None -> <PyModule 'email.mime.image' C:\Python27\lib\email\mime\image.pyc imports=[('email.encoders', 0, 0, -1), ('email.mime.nonmultipart.MIMENonMultipart', 0, 0, -1), ('imghdr', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1), ('email', 0, 0, -1)] binaries=[] datas=[]>
email.mime.message: None -> <PyModule 'email.mime.message' C:\Python27\lib\email\mime\message.pyc imports=[('email.mime.nonmultipart.MIMENonMultipart', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1), ('email', 0, 0, -1), ('email.message', 0, 0, -1)] binaries=[] datas=[]>
email.mime.multipart: None -> <PyModule 'email.mime.multipart' C:\Python27\lib\email\mime\multipart.pyc imports=[('email.mime.base', 0, 0, -1), ('email.mime.base.MIMEBase', 0, 0, -1)] binaries=[] datas=[]>
email.mime.nonmultipart: None -> <PyModule 'email.mime.nonmultipart' C:\Python27\lib\email\mime\nonmultipart.pyc imports=[('email.errors', 0, 0, -1), ('email.mime.base', 0, 0, -1), ('email.mime.base.MIMEBase', 0, 0, -1), ('email', 0, 0, -1)] binaries=[] datas=[]>
email.mime.text: None -> <PyModule 'email.mime.text' C:\Python27\lib\email\mime\text.pyc imports=[('email.encoders', 0, 0, -1), ('email.mime.nonmultipart.MIMENonMultipart', 0, 0, -1), ('email.encoders.encode_7or8bit', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1)] binaries=[] datas=[]>
email.warnings: None -> None
email.cStringIO: None -> None
email.re: None -> None
email.binascii: None -> None
email.uu: None -> None
email.random: None -> None
email.time: None -> None
email.string: None -> None
email._parseaddr: None -> <PyModule 'email._parseaddr' C:\Python27\lib\email\_parseaddr.pyc imports=[('calendar', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
email.os: None -> None
email.urllib: None -> None
email.quopri: None -> None
email.socket: None -> None
email.base64: None -> None
email.calendar: None -> None
email.codecs: None -> None
email.mime.email: None -> None
email.mime.sndhdr: None -> None
sndhdr: None -> <PyModule 'sndhdr' C:\Python27\lib\sndhdr.pyc imports=[('sys', 1, 0, -1), ('aifc', 1, 0, -1), ('glob', 1, 1, -1), ('os', 1, 0, -1)] binaries=[] datas=[]>
email.mime.cStringIO: None -> None
aifc: None -> <PyModule 'aifc' C:\Python27\lib\aifc.pyc imports=[('cl', 1, 1, -1), ('struct', 0, 0, -1), ('audioop', 1, 0, -1), ('chunk.Chunk', 0, 0, -1), ('__builtin__', 0, 0, -1), ('sys', 0, 1, -1), ('cl', 1, 0, -1), ('math', 1, 0, -1), ('chunk', 0, 0, -1), ('audioop', 1, 1, -1)] binaries=[] datas=[]>
cl: None -> None
  DEL cl
audioop: None -> <BuiltinModule 'audioop' None imports=[] binaries=[] datas=[]>
chunk: None -> <PyModule 'chunk' C:\Python27\lib\chunk.pyc imports=[('struct', 1, 0, -1)] binaries=[] datas=[]>
cl: None -> None
  DEL cl
email.mime.imghdr: None -> None
imghdr: None -> <PyModule 'imghdr' C:\Python27\lib\imghdr.pyc imports=[('sys', 1, 0, -1), ('glob', 1, 1, -1), ('os', 1, 0, -1)] binaries=[] datas=[]>
SOCKS: None -> None
  DEL SOCKS
EasyDialogs: None -> None
  DEL EasyDialogs
EasyDialogs: None -> None
  DEL EasyDialogs
pwd: None -> None
  DEL pwd
termios: None -> None
  DEL termios
__main__: <PyScript '__main__' C:\Python27\lib\site-packages\PyInstaller\loader\_pyi_bootstrap.py imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1), ('site', 0, 0, -1), ('pyi_importers', 0, 0, -1), ('warnings', 0, 1, -1), ('encodings', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Python27\lib\site-packages\PyInstaller\loader\pyi_importers.py imports=[('pyi_archive.ZlibArchive', 0, 0, -1), ('imp', 0, 0, -1), ('sys', 0, 0, -1), ('pyi_archive.ArchiveReadError', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
pwd: None -> None
  DEL pwd
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
__main__: <PyScript '__main__' C:\Python27\lib\site-packages\PyInstaller\loader\pyi_importers.py imports=[('pyi_archive.ZlibArchive', 0, 0, -1), ('imp', 0, 0, -1), ('sys', 0, 0, -1), ('pyi_archive.ArchiveReadError', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Python27\lib\site-packages\PyInstaller\loader\pyi_archive.py imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('marshal', 0, 0, -1), ('os', 1, 1, -1), ('struct', 0, 0, -1), ('imp', 1, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
pwd: None -> None
  DEL pwd
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
__main__: <PyScript '__main__' C:\Python27\lib\site-packages\PyInstaller\loader\pyi_archive.py imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('marshal', 0, 0, -1), ('os', 1, 1, -1), ('struct', 0, 0, -1), ('imp', 1, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Python27\lib\site-packages\PyInstaller\loader\pyi_carchive.py imports=[('zlib', 0, 0, -1), ('os.path', 1, 0, -1), ('pyi_archive', 0, 0, -1), ('sys', 0, 0, -1), ('struct', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
pwd: None -> None
  DEL pwd
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
__main__: <PyScript '__main__' C:\Python27\lib\site-packages\PyInstaller\loader\pyi_carchive.py imports=[('zlib', 0, 0, -1), ('os.path', 1, 0, -1), ('pyi_archive', 0, 0, -1), ('sys', 0, 0, -1), ('struct', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Python27\lib\site-packages\PyInstaller\loader\pyi_os_path.py imports=[('sys', 0, 0, -1), ('posix.environ', 0, 1, -1), ('nt.listdir', 0, 1, -1), ('nt.environ', 0, 1, -1), ('posix', 0, 1, -1), ('posix.listdir', 0, 1, -1), ('nt', 0, 1, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
__main__: <PyScript '__main__' C:\Python27\lib\site-packages\PyInstaller\loader\pyi_os_path.py imports=[('sys', 0, 0, -1), ('posix.environ', 0, 1, -1), ('nt.listdir', 0, 1, -1), ('nt.environ', 0, 1, -1), ('posix', 0, 1, -1), ('posix.listdir', 0, 1, -1), ('nt', 0, 1, -1)] binaries=[] datas=[]> -> <PyScript '__main__' spotify_bot_2.0.py imports=[('speech', 0, 0, -1), ('re', 0, 0, -1), ('winsound', 0, 0, -1), ('sys', 0, 0, -1), ('datetime.datetime', 0, 0, -1), ('jabberbot', 0, 0, -1), ('jabberbot.JabberBot', 0, 0, -1), ('jabberbot.botcmd', 0, 0, -1), ('thread', 0, 0, -1), ('logging', 0, 0, -1), ('pytify', 0, 0, -1), ('datetime', 0, 0, -1), ('pyglet', 0, 0, -1), ('os', 0, 0, -1), ('subprocess', 0, 0, -1), ('time', 0, 0, -1), ('pickle', 0, 0, -1), ('pytify.Spotify', 0, 0, -1), ('webbrowser', 0, 0, -1)] binaries=[] datas=[]>
speech: None -> <PyModule 'speech' C:\Python27\lib\site-packages\speech.pyc imports=[('win32com.client', 0, 0, -1), ('win32com.client.constants', 0, 0, -1), ('pythoncom', 0, 0, -1), ('thread', 0, 0, -1), ('win32com.client.gencache', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
winsound: None -> <ExtensionModule 'winsound' C:\Python27\DLLs\winsound.pyd imports=[] binaries=[] datas=[]>
jabberbot: None -> <PyModule 'jabberbot' C:\Python27\lib\site-packages\jabberbot.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('thread', 0, 0, -1), ('logging', 0, 0, -1), ('inspect', 0, 0, -1), ('traceback', 0, 0, -1), ('xmpp', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
pytify: None -> <PyModule 'pytify' C:\Python27\scripts\pytify.pyc imports=[('sys', 0, 0, -1), ('win32gui', 0, 0, -1)] binaries=[] datas=[]>
pyglet: None -> <PkgModule 'pyglet' C:\Python27\lib\site-packages\pyglet\__init__.pyc imports=[('image', 0, 1, -1), ('lib', 0, 1, -1), ('pyglet', 1, 0, -1), ('resource', 0, 1, -1), ('sys', 0, 0, -1), ('media', 0, 1, -1), ('os', 0, 0, -1), ('text', 0, 1, -1), ('app', 0, 1, -1), ('ctypes', 1, 0, -1), ('event', 0, 1, -1), ('ctypes', 0, 1, -1), ('font', 0, 1, -1), ('window', 0, 1, -1), ('graphics', 0, 1, -1), ('clock', 0, 1, -1), ('pyglet.lib', 1, 0, -1), ('sprite', 0, 1, -1), ('com', 0, 1, -1), ('gl', 0, 1, -1)] binaries=[] datas=[]>
win32com: None -> <PkgModule 'win32com' C:\Python27\lib\site-packages\win32com\__init__.pyc imports=[('win32api', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('pythoncom', 0, 0, -1), ('imp', 0, 1, -1), ('win32com.gen_py', 0, 1, -1), ('win32com.client.util', 0, 0, -1), ('win32com.server.util', 0, 0, -1)] binaries=[] datas=[]>
win32com.client: None -> <PkgModule 'win32com.client' C:\Python27\lib\site-packages\win32com\client\__init__.pyc imports=[('gencache', 1, 1, -1), ('pywintypes', 0, 0, -1), ('pythoncom', 0, 0, -1), ('types.ClassType', 1, 0, -1), ('winerror', 1, 1, -1), ('gencache', 0, 0, -1), ('new', 1, 0, -1), ('gencache', 1, 0, -1), ('dynamic', 0, 0, -1), ('types', 1, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
win32com.client.constants: None -> None
  DEL win32com.client.constants
pythoncom: None -> <PyModule 'pythoncom' C:\Python27\lib\site-packages\pythoncom.pyc imports=[('pywintypes', 0, 0, -1)] binaries=[('pythoncom27.dll', 'C:\\Windows\\system32\\pythoncom27.dll', 'BINARY')] datas=[]>
win32com.client.gencache: None -> <PyModule 'win32com.client.gencache' C:\Python27\lib\site-packages\win32com\client\gencache.pyc imports=[('genpy', 1, 1, -1), ('win32com', 0, 0, -1), ('makepy', 1, 1, -1), ('win32com.client', 0, 0, -1), ('CLSIDToClass', 1, 1, -1), ('shutil', 1, 1, -1), ('os', 0, 0, -1), ('pywintypes', 0, 0, -1), ('pythoncom', 0, 0, -1), ('operator', 0, 0, -1), ('makepy', 1, 0, -1), ('cStringIO', 1, 1, -1), ('cPickle', 0, 0, -1), ('zipfile', 1, 1, -1), ('getopt', 0, 1, -1), ('traceback', 0, 0, -1), ('CLSIDToClass', 0, 0, -1), ('glob', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
win32com.win32api: None -> None
win32api: None -> <ExtensionModule 'win32api' C:\Python27\lib\site-packages\win32\win32api.pyd imports=[] binaries=[] datas=[]>
win32com.sys: None -> None
win32com.os: None -> None
win32com.pythoncom: None -> None
win32com.imp: None -> None
win32com.win32com: None -> None
win32com.gen_py: None -> <PkgModule 'win32com.gen_py' C:\Python27\lib\site-packages\win32com\gen_py\__init__.pyc imports=[('win32com', 0, 0, -1)] binaries=[] datas=[]>
win32com.client.util: None -> <PyModule 'win32com.client.util' C:\Python27\lib\site-packages\win32com\client\util.pyc imports=[('win32com.client._get_good_object_', 0, 0, -1), ('pythoncom', 0, 0, -1), ('win32com.client.Dispatch', 0, 0, -1), ('win32com.client', 0, 0, -1)] binaries=[] datas=[]>
win32com.server: None -> <PkgModule 'win32com.server' C:\Python27\lib\site-packages\win32com\server\__init__.pyc imports=[] binaries=[] datas=[]>
win32com.server.util: None -> <PyModule 'win32com.server.util' C:\Python27\lib\site-packages\win32com\server\util.pyc imports=[('win32com.server.dispatcher', 1, 1, -1), ('pythoncom', 0, 0, -1), ('policy', 0, 0, -1), ('exception.COMException', 0, 0, -1), ('exception', 0, 0, -1), ('winerror', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
pwd: None -> None
  DEL pwd
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
pywintypes: None -> <PyModule 'pywintypes' C:\Python27\lib\site-packages\win32\lib\pywintypes.pyc imports=[('os', 0, 0, -1), ('imp', 0, 0, -1), ('sys', 0, 0, -1), ('_win32sysloader', 1, 1, -1)] binaries=[('pythoncom27.dll', 'C:\\Windows\\system32\\pythoncom27.dll', 'BINARY')] datas=[]>
_win32sysloader: None -> <ExtensionModule '_win32sysloader' C:\Python27\lib\site-packages\win32\_win32sysloader.pyd imports=[] binaries=[] datas=[]>
win32com.gen_py.win32com: None -> None
win32com.client.pywintypes: None -> None
win32com.client.pythoncom: None -> None
win32com.client.types: None -> None
win32com.client.winerror: None -> None
winerror: None -> <PyModule 'winerror' C:\Python27\lib\site-packages\win32\lib\winerror.pyc imports=[] binaries=[] datas=[]>
win32com.client.new: None -> None
new: None -> <PyModule 'new' C:\Python27\lib\new.pyc imports=[('types.CodeType', 0, 0, -1), ('types.MethodType', 0, 0, -1), ('types', 0, 0, -1), ('types.InstanceType', 0, 0, -1), ('warnings', 0, 0, -1), ('types.FunctionType', 0, 0, -1), ('types.ModuleType', 0, 0, -1), ('warnings.warnpy3k', 0, 0, -1), ('types.ClassType', 0, 0, -1)] binaries=[] datas=[]>
win32com.client.dynamic: None -> <PyModule 'win32com.client.dynamic' C:\Python27\lib\site-packages\win32com\client\dynamic.pyc imports=[('sys', 0, 0, -1), ('types', 0, 0, -1), ('pywintypes', 0, 0, -1), ('pythoncom', 0, 0, -1), ('win32com.client.util', 1, 0, -1), ('util', 1, 0, -1), ('winerror', 0, 0, -1), ('pywintypes.IIDType', 0, 0, -1), ('traceback', 0, 0, -1), ('build', 0, 0, -1), ('win32com.client', 0, 0, -1)] binaries=[] datas=[]>
win32com.client.sys: None -> None
win32com.client.genpy: None -> <PyModule 'win32com.client.genpy' C:\Python27\lib\site-packages\win32com\client\genpy.pyc imports=[('win32com', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('pythoncom', 0, 0, -1), ('time', 0, 0, -1), ('build', 0, 0, -1), ('codecs', 1, 1, -1)] binaries=[] datas=[]>
win32com.client.win32com: None -> None
win32com.client.makepy: None -> <PyModule 'win32com.client.makepy' C:\Python27\lib\site-packages\win32com\client\makepy.pyc imports=[('codecs', 1, 1, -1), ('win32com.client', 0, 0, -1), ('win32com.client.gencache', 0, 0, -1), ('os', 0, 0, -1), ('pywin', 1, 0, -1), ('pythoncom', 0, 0, -1), ('pywin.dialogs.status', 1, 1, -1), ('win32com.client.selecttlb', 0, 0, -1), ('win32com.client.Dispatch', 0, 0, -1), ('getopt', 1, 0, -1), ('win32ui', 1, 0, -1), ('win32com.client.genpy', 0, 0, -1), ('pywin.dialogs', 1, 1, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
win32com.client.CLSIDToClass: None -> <PyModule 'win32com.client.CLSIDToClass' C:\Python27\lib\site-packages\win32com\client\CLSIDToClass.pyc imports=[] binaries=[] datas=[]>
win32com.client.shutil: None -> None
shutil: None -> <PyModule 'shutil' C:\Python27\lib\shutil.pyc imports=[('collections', 0, 0, -1), ('distutils.spawn', 1, 0, -1), ('pwd', 0, 0, -1), ('sys', 0, 0, -1), ('os.path', 0, 0, -1), ('os', 0, 0, -1), ('distutils.errors', 1, 0, -1), ('tarfile', 1, 0, -1), ('fnmatch', 0, 0, -1), ('grp', 0, 0, -1), ('os.path.abspath', 0, 0, -1), ('stat', 0, 0, -1), ('grp.getgrnam', 0, 0, -1), ('pwd.getpwnam', 0, 0, -1), ('errno', 0, 0, -1), ('zipfile', 1, 0, -1), ('distutils.spawn.spawn', 1, 0, -1), ('distutils.errors.DistutilsExecError', 1, 0, -1)] binaries=[] datas=[]>
win32com.client.os: None -> None
win32com.client.operator: None -> None
win32com.client.cStringIO: None -> None
win32com.client.cPickle: None -> None
win32com.client.zipfile: None -> None
zipfile: None -> <PyModule 'zipfile' C:\Python27\lib\zipfile.pyc imports=[('re', 0, 0, -1), ('textwrap', 1, 0, -1), ('sys', 0, 0, -1), ('shutil', 0, 0, -1), ('os', 0, 0, -1), ('struct', 0, 0, -1), ('cStringIO', 0, 0, -1), ('stat', 0, 0, -1), ('string', 0, 0, -1), ('zlib', 0, 0, -1), ('binascii', 0, 0, -1), ('py_compile', 1, 1, -1), ('time', 0, 0, -1), ('io', 0, 0, -1)] binaries=[] datas=[]>
win32com.client.getopt: None -> None
win32com.client.traceback: None -> None
win32com.client.glob: None -> None
win32com.client.time: None -> None
win32com.client.build: None -> <PyModule 'win32com.client.build' C:\Python27\lib\site-packages\win32com\client\build.pyc imports=[('keyword.iskeyword', 0, 0, -1), ('pywintypes.TimeType', 0, 0, -1), ('sys', 0, 0, -1), ('pywintypes', 0, 0, -1), ('pythoncom', 0, 0, -1), ('string', 0, 0, -1), ('keyword', 0, 0, -1), ('datetime', 0, 0, -1), ('winerror', 0, 0, -1)] binaries=[] datas=[]>
win32com.client.codecs: None -> None
win32com.client.keyword: None -> None
win32com.client.string: None -> None
win32com.client.datetime: None -> None
win32com.client.pywin: None -> None
pywin: None -> <PkgModule 'pywin' C:\Python27\lib\site-packages\Pythonwin\pywin\__init__.pyc imports=[] binaries=[] datas=[]>
pywin.dialogs: None -> <PkgModule 'pywin.dialogs' C:\Python27\lib\site-packages\Pythonwin\pywin\dialogs\__init__.pyc imports=[] binaries=[] datas=[]>
pywin.dialogs.status: None -> <PyModule 'pywin.dialogs.status' C:\Python27\lib\site-packages\Pythonwin\pywin\dialogs\status.pyc imports=[('threading', 0, 0, -1), ('win32api', 0, 0, -1), ('win32ui', 0, 0, -1), ('pywin.mfc.thread', 0, 0, -1), ('time', 0, 0, -1), ('pywin.mfc', 0, 0, -1), ('pywin.mfc.dialog', 0, 0, -1), ('win32api', 1, 0, -1), ('pywin.mfc.thread.WinThread', 0, 0, -1), ('win32con', 0, 0, -1)] binaries=[] datas=[]>
win32com.client.selecttlb: None -> <PyModule 'win32com.client.selecttlb' C:\Python27\lib\site-packages\win32com\client\selecttlb.pyc imports=[('pywin.dialogs.list', 1, 0, -1), ('win32con', 0, 0, -1), ('win32api', 0, 0, -1), ('pythoncom', 0, 0, -1)] binaries=[] datas=[]>
win32com.client.Dispatch: None -> None
win32com.client.win32ui: None -> None
win32ui: None -> <ExtensionModule 'win32ui' C:\Python27\lib\site-packages\Pythonwin\win32ui.pyd imports=[('cStringIO', 0, 0, -1), ('traceback', 0, 0, -1)] binaries=[] datas=[]>
pywin.dialogs.threading: None -> None
pywin.dialogs.win32api: None -> None
pywin.dialogs.win32ui: None -> None
pywin.dialogs.pywin: None -> None
pywin.mfc: None -> <PkgModule 'pywin.mfc' C:\Python27\lib\site-packages\Pythonwin\pywin\mfc\__init__.pyc imports=[] binaries=[] datas=[]>
pywin.mfc.thread: None -> <PyModule 'pywin.mfc.thread' C:\Python27\lib\site-packages\Pythonwin\pywin\mfc\thread.pyc imports=[('object', 0, 0, -1), ('win32ui', 0, 0, -1)] binaries=[] datas=[]>
pywin.dialogs.time: None -> None
pywin.mfc.dialog: None -> <PyModule 'pywin.mfc.dialog' C:\Python27\lib\site-packages\Pythonwin\pywin\mfc\dialog.pyc imports=[('pywin.mfc.window', 0, 0, -1), ('pywin.mfc', 0, 0, -1), ('win32con', 0, 0, -1), ('win32ui', 0, 0, -1)] binaries=[] datas=[]>
pywin.dialogs.win32con: None -> None
win32con: None -> <PyModule 'win32con' C:\Python27\lib\site-packages\win32\lib\win32con.pyc imports=[] binaries=[] datas=[]>
pywin.mfc.object: None -> <PyModule 'pywin.mfc.object' C:\Python27\lib\site-packages\Pythonwin\pywin\mfc\object.pyc imports=[('sys', 0, 0, -1), ('win32ui', 0, 0, -1)] binaries=[] datas=[]>
pywin.mfc.win32ui: None -> None
pywin.mfc.sys: None -> None
pywin.mfc.pywin: None -> None
pywin.mfc.window: None -> <PyModule 'pywin.mfc.window' C:\Python27\lib\site-packages\Pythonwin\pywin\mfc\window.pyc imports=[('object', 0, 0, -1), ('win32con', 0, 0, -1), ('win32ui', 0, 0, -1)] binaries=[] datas=[]>
pywin.mfc.win32con: None -> None
pywin.dialogs.list: None -> <PyModule 'pywin.dialogs.list' C:\Python27\lib\site-packages\Pythonwin\pywin\dialogs\list.pyc imports=[('win32api', 0, 0, -1), ('win32ui', 0, 0, -1), ('commctrl', 0, 0, -1), ('pywin.mfc', 0, 0, -1), ('pywin.mfc.dialog', 0, 0, -1), ('win32con', 0, 0, -1)] binaries=[] datas=[]>
win32com.client.win32con: None -> None
win32com.client.win32api: None -> None
pywin.dialogs.commctrl: None -> None
commctrl: None -> <PyModule 'commctrl' C:\Python27\lib\site-packages\win32\lib\commctrl.pyc imports=[] binaries=[] datas=[]>
distutils: None -> <PkgModule 'distutils' C:\Python27\lib\distutils\__init__.pyc imports=[] binaries=[] datas=[('include\\pyconfig.h', 'C:\\Python27\\include\\pyconfig.h', 'DATA')]>
distutils.spawn: None -> <PyModule 'distutils.spawn' C:\Python27\lib\distutils\spawn.pyc imports=[('distutils', 0, 1, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('distutils', 0, 0, -1), ('distutils.errors.DistutilsExecError', 0, 0, -1), ('distutils.errors.DistutilsPlatformError', 0, 0, -1), ('distutils.sysconfig', 0, 1, -1), ('distutils.errors', 0, 0, -1), ('errno', 1, 1, -1), ('distutils.log', 0, 0, -1)] binaries=[] datas=[]>
pwd: None -> None
  DEL pwd
distutils.errors: None -> <PyModule 'distutils.errors' C:\Python27\lib\distutils\errors.pyc imports=[] binaries=[] datas=[]>
tarfile: None -> <PyModule 'tarfile' C:\Python27\lib\tarfile.pyc imports=[('pwd', 0, 0, -1), ('cStringIO.StringIO', 1, 0, -1), ('os', 0, 0, -1), ('StringIO', 1, 1, -1), ('struct', 0, 0, -1), ('grp', 0, 0, -1), ('calendar', 1, 0, -1), ('gzip', 1, 0, -1), ('sys', 0, 0, -1), ('shutil', 0, 0, -1), ('warnings', 1, 0, -1), ('bz2', 1, 0, -1), ('time', 0, 0, -1), ('warnings.warnpy3k', 1, 0, -1), ('zlib', 1, 1, -1), ('errno', 0, 0, -1), ('cStringIO', 1, 0, -1), ('re', 0, 0, -1), ('copy', 0, 0, -1), ('StringIO.StringIO', 1, 1, -1), ('warnings', 1, 1, -1), ('operator', 0, 0, -1), ('bz2', 1, 1, -1), ('stat', 0, 0, -1)] binaries=[] datas=[]>
grp: None -> None
  DEL grp
grp: None -> None
  DEL grp
pwd: None -> None
  DEL pwd
distutils.distutils: None -> None
distutils.sys: None -> None
distutils.os: None -> None
distutils.sysconfig: None -> <PyModule 'distutils.sysconfig' C:\Python27\lib\distutils\sysconfig.pyc imports=[('_osx_support', 1, 1, -1), ('distutils.text_file', 1, 0, -1), ('re', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('string', 0, 0, -1), ('distutils.errors.DistutilsPlatformError', 0, 0, -1), ('distutils.errors', 0, 0, -1), ('distutils.text_file.TextFile', 1, 0, -1)] binaries=[] datas=[]>
distutils.errno: None -> None
distutils.log: None -> <PyModule 'distutils.log' C:\Python27\lib\distutils\log.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
distutils._osx_support: None -> None
_osx_support: None -> <PyModule '_osx_support' C:\Python27\lib\_osx_support.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('distutils', 1, 1, -1), ('tempfile', 1, 0, -1), ('contextlib', 1, 0, -1), ('distutils.log', 1, 1, -1)] binaries=[] datas=[]>
distutils.text_file: None -> <PyModule 'distutils.text_file' C:\Python27\lib\distutils\text_file.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
distutils.re: None -> None
distutils.string: None -> None
contextlib: None -> <PyModule 'contextlib' C:\Python27\lib\contextlib.pyc imports=[('functools.wraps', 0, 0, -1), ('functools', 0, 0, -1), ('warnings', 0, 0, -1), ('sys', 0, 0, -1), ('warnings.warn', 0, 0, -1)] binaries=[] datas=[]>
pwd: None -> None
  DEL pwd
grp: None -> None
  DEL grp
gzip: None -> <PyModule 'gzip' C:\Python27\lib\gzip.pyc imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('struct', 0, 0, -1), ('__builtin__', 0, 0, -1), ('zlib', 0, 0, -1), ('warnings', 1, 0, -1), ('errno', 1, 1, -1), ('time', 0, 0, -1), ('io', 0, 0, -1)] binaries=[] datas=[]>
py_compile: None -> <PyModule 'py_compile' C:\Python27\lib\py_compile.pyc imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('marshal', 0, 0, -1), ('os', 0, 0, -1), ('__builtin__', 0, 0, -1), ('traceback', 0, 0, -1)] binaries=[] datas=[]>
win32com.client._get_good_object_: None -> None
  DEL win32com.client._get_good_object_
win32com.server.win32com: None -> None
win32com.server.dispatcher: None -> <PyModule 'win32com.server.dispatcher' C:\Python27\lib\site-packages\win32com\server\dispatcher.pyc imports=[('win32com.util', 0, 0, -1), ('win32com', 0, 0, -1), ('win32api', 0, 0, -1), ('sys', 0, 0, -1), ('win32traceutil', 1, 1, -1), ('pythoncom', 0, 0, -1), ('win32com.server.exception', 0, 0, -1), ('win32trace', 0, 0, -1), ('traceback', 0, 0, -1), ('win32com.server.exception.IsCOMServerException', 0, 0, -1), ('sys.exc_info', 0, 0, -1), ('win32com.util.IIDToInterfaceName', 0, 0, -1)] binaries=[] datas=[]>
win32com.server.pythoncom: None -> None
win32com.server.policy: None -> <PyModule 'win32com.server.policy' C:\Python27\lib\site-packages\win32com\server\policy.pyc imports=[('pythoncom.DISPATCH_METHOD', 0, 0, -1), ('pywintypes', 0, 0, -1), ('pythoncom.DISPID_COLLECT', 0, 0, -1), ('exception', 0, 0, -1), ('dispatcher.DispatcherWin32trace', 0, 0, -1), ('win32com', 1, 1, -1), ('exception.COMException', 0, 0, -1), ('pythoncom.DISPID_CONSTRUCTOR', 0, 0, -1), ('sys', 0, 0, -1), ('pythoncom.DISPID_UNKNOWN', 0, 0, -1), ('dispatcher.DispatcherTrace', 0, 0, -1), ('pythoncom.DISPID_STARTENUM', 0, 0, -1), ('winerror', 0, 0, -1), ('pythoncom.DISPID_VALUE', 0, 0, -1), ('win32com.client', 1, 1, -1), ('win32con', 0, 0, -1), ('win32com.util', 1, 1, -1), ('pythoncom.DISPATCH_PROPERTYGET', 0, 0, -1), ('win32api', 0, 0, -1), ('dispatcher', 0, 0, -1), ('types', 0, 0, -1), ('pythoncom.DISPATCH_PROPERTYPUTREF', 0, 0, -1), ('pythoncom', 0, 0, -1), ('pythoncom.DISPID_EVALUATE', 0, 0, -1), ('win32com.universal', 1, 1, -1), ('pythoncom.DISPATCH_PROPERTYPUT', 0, 0, -1), ('win32com.util.IIDToInterfaceName', 1, 1, -1), ('pythoncom.DISPID_DESTRUCTOR', 0, 0, -1), ('pythoncom.DISPID_PROPERTYPUT', 0, 0, -1), ('pythoncom.DISPID_NEWENUM', 0, 0, -1)] binaries=[] datas=[]>
win32com.server.exception: None -> <PyModule 'win32com.server.exception' C:\Python27\lib\site-packages\win32com\server\exception.pyc imports=[('sys', 0, 0, -1), ('pythoncom', 0, 0, -1)] binaries=[] datas=[]>
win32com.server.winerror: None -> None
win32com.util: None -> <PyModule 'win32com.util' C:\Python27\lib\site-packages\win32com\util.pyc imports=[('win32con', 0, 0, -1), ('win32api', 0, 0, -1), ('pythoncom', 0, 0, -1)] binaries=[] datas=[]>
win32com.server.win32api: None -> None
win32com.server.sys: None -> None
win32com.server.win32traceutil: None -> None
win32traceutil: None -> <PyModule 'win32traceutil' C:\Python27\lib\site-packages\win32\lib\win32traceutil.pyc imports=[('sys', 1, 0, -1), ('win32api', 1, 0, -1), ('win32trace', 0, 0, -1)] binaries=[] datas=[]>
win32com.server.win32trace: None -> None
win32trace: None -> <ExtensionModule 'win32trace' C:\Python27\lib\site-packages\win32\win32trace.pyd imports=[] binaries=[] datas=[]>
win32com.server.traceback: None -> None
win32com.win32con: None -> None
win32com.server.pywintypes: None -> None
win32com.server.win32con: None -> None
win32com.server.types: None -> None
win32com.universal: None -> <PyModule 'win32com.universal' C:\Python27\lib\site-packages\win32com\universal.pyc imports=[('win32com.client.gencache', 0, 0, -1), ('win32com.client.build', 1, 1, -1), ('win32com.client', 0, 0, -1), ('pythoncom', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
win32com.types: None -> None
xmpp: None -> <PkgModule 'xmpp' C:\Python27\lib\site-packages\xmpp\__init__.pyc imports=[('filetransfer', 0, 0, -1), ('simplexml', 0, 0, -1), ('client.*', 0, 0, -1), ('browser', 0, 0, -1), ('dispatcher', 0, 0, -1), ('protocol.*', 0, 0, -1), ('transports', 0, 0, -1), ('roster', 0, 0, -1), ('debug', 0, 0, -1), ('features', 0, 0, -1), ('protocol', 0, 0, -1), ('commands', 0, 0, -1), ('auth', 0, 0, -1), ('client', 0, 0, -1)] binaries=[] datas=[]>
xmpp.filetransfer: None -> <PyModule 'xmpp.filetransfer' C:\Python27\lib\site-packages\xmpp\filetransfer.pyc imports=[('dispatcher.PlugIn', 0, 0, -1), ('protocol', 0, 0, -1), ('base64', 0, 0, -1), ('dispatcher', 0, 0, -1), ('protocol.*', 0, 0, -1)] binaries=[] datas=[]>
xmpp.simplexml: None -> <PyModule 'xmpp.simplexml' C:\Python27\lib\site-packages\xmpp\simplexml.pyc imports=[('xml.parsers.expat', 0, 0, -1)] binaries=[] datas=[]>
xmpp.client: None -> <PyModule 'xmpp.client' C:\Python27\lib\site-packages\xmpp\client.pyc imports=[('dispatcher', 0, 0, -1), ('transports', 0, 0, -1), ('roster', 0, 0, -1), ('debug', 0, 0, -1), ('socket', 0, 0, -1), ('auth', 0, 0, -1)] binaries=[] datas=[]>
xmpp.browser: None -> <PyModule 'xmpp.browser' C:\Python27\lib\site-packages\xmpp\browser.pyc imports=[('client', 0, 0, -1), ('dispatcher.*', 0, 0, -1), ('client.PlugIn', 0, 0, -1), ('dispatcher', 0, 0, -1)] binaries=[] datas=[]>
xmpp.dispatcher: None -> <PyModule 'xmpp.dispatcher' C:\Python27\lib\site-packages\xmpp\dispatcher.pyc imports=[('client', 0, 0, -1), ('simplexml', 0, 0, -1), ('sys', 0, 0, -1), ('protocol.*', 0, 0, -1), ('protocol', 0, 0, -1), ('time', 0, 0, -1), ('client.PlugIn', 0, 0, -1)] binaries=[] datas=[]>
xmpp.protocol: None -> <PyModule 'xmpp.protocol' C:\Python27\lib\site-packages\xmpp\protocol.pyc imports=[('simplexml', 0, 0, -1), ('simplexml.ustr', 0, 0, -1), ('time', 0, 0, -1), ('simplexml.Node', 0, 0, -1)] binaries=[] datas=[]>
xmpp.transports: None -> <PyModule 'xmpp.transports' C:\Python27\lib\site-packages\xmpp\transports.pyc imports=[('client', 0, 0, -1), ('simplexml', 0, 0, -1), ('simplexml.ustr', 0, 0, -1), ('sys', 0, 0, -1), ('dispatcher', 0, 0, -1), ('select', 0, 0, -1), ('dns.resolver', 0, 0, -1), ('protocol.*', 0, 0, -1), ('socket', 0, 0, -1), ('protocol', 0, 0, -1), ('DNS', 0, 1, -1), ('base64', 0, 0, -1), ('client.PlugIn', 0, 0, -1)] binaries=[] datas=[]>
xmpp.roster: None -> <PyModule 'xmpp.roster' C:\Python27\lib\site-packages\xmpp\roster.pyc imports=[('client', 0, 0, -1), ('protocol', 0, 0, -1), ('client.PlugIn', 0, 0, -1), ('protocol.*', 0, 0, -1)] binaries=[] datas=[]>
xmpp.debug: None -> <PyModule 'xmpp.debug' C:\Python27\lib\site-packages\xmpp\debug.pyc imports=[('traceback', 0, 0, -1), ('os', 0, 0, -1), ('time', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
xmpp.features: None -> <PyModule 'xmpp.features' C:\Python27\lib\site-packages\xmpp\features.pyc imports=[('protocol', 0, 0, -1), ('protocol.*', 0, 0, -1)] binaries=[] datas=[]>
xmpp.commands: None -> <PyModule 'xmpp.commands' C:\Python27\lib\site-packages\xmpp\commands.pyc imports=[('client', 0, 0, -1), ('protocol.*', 0, 0, -1), ('protocol', 0, 0, -1), ('math', 1, 0, -1), ('math.pi', 1, 0, -1), ('client.PlugIn', 0, 0, -1)] binaries=[] datas=[]>
xmpp.auth: None -> <PyModule 'xmpp.auth' C:\Python27\lib\site-packages\xmpp\auth.pyc imports=[('client', 0, 0, -1), ('sha', 0, 0, -1), ('md5', 0, 0, -1), ('dispatcher', 0, 0, -1), ('protocol.*', 0, 0, -1), ('re', 0, 0, -1), ('protocol', 0, 0, -1), ('base64', 0, 0, -1), ('random', 0, 0, -1), ('client.PlugIn', 0, 0, -1)] binaries=[] datas=[]>
xmpp.base64: None -> None
xmpp.sys: None -> None
xmpp.time: None -> None
xmpp.socket: None -> None
xmpp.select: None -> None
xmpp.dns: None -> None
dns: None -> None
  DEL dns
xmpp.DNS: None -> None
DNS: None -> <PkgModule 'DNS' C:\Python27\lib\site-packages\DNS\__init__.pyc imports=[('Base', 0, 0, -1), ('Base.DnsRequest', 0, 0, -1), ('Class', 0, 0, -1), ('Opcode', 0, 0, -1), ('Type', 0, 0, -1), ('lazy.*', 0, 0, -1), ('Lib', 0, 0, -1), ('lazy', 0, 0, -1), ('Base.DNSError', 0, 0, -1), ('Status', 0, 0, -1), ('Base.*', 0, 0, -1), ('Lib.*', 0, 0, -1), ('Lib.DnsResult', 0, 0, -1)] binaries=[] datas=[]>
xmpp.xml: None -> None
xml: None -> <PkgModule 'xml' C:\Python27\lib\xml\__init__.pyc imports=[('sys', 0, 1, -1), ('_xmlplus', 0, 0, -1), ('xml.sax.xmlreader', 0, 0, -1), ('xml.sax.expatreader', 0, 0, -1)] binaries=[] datas=[]>
xml.parsers: None -> <PkgModule 'xml.parsers' C:\Python27\lib\xml\parsers\__init__.pyc imports=[] binaries=[] datas=[]>
xml.parsers.expat: None -> <PyModule 'xml.parsers.expat' C:\Python27\lib\xml\parsers\expat.pyc imports=[('pyexpat', 0, 0, -1), ('pyexpat.*', 0, 0, -1)] binaries=[] datas=[]>
xml.sys: None -> None
xml._xmlplus: None -> None
_xmlplus: None -> None
  DEL _xmlplus
xml.xml: None -> None
xml.sax: None -> <PkgModule 'xml.sax' C:\Python27\lib\xml\sax\__init__.pyc imports=[('handler', 0, 0, -1), ('_exceptions.SAXNotSupportedException', 0, 0, -1), ('cStringIO', 1, 0, -1), ('handler.ErrorHandler', 0, 0, -1), ('handler.ContentHandler', 0, 0, -1), ('xml.sax.expatreader', 0, 1, -1), ('_exceptions.SAXReaderNotAvailable', 0, 0, -1), ('_exceptions.SAXNotRecognizedException', 0, 0, -1), ('StringIO', 1, 1, -1), ('cStringIO.StringIO', 1, 0, -1), ('_exceptions.SAXParseException', 0, 0, -1), ('_exceptions', 0, 0, -1), ('sys', 1, 1, -1), ('org.python.core', 1, 0, -1), ('xmlreader', 0, 0, -1), ('_exceptions.SAXException', 0, 0, -1), ('os', 0, 0, -1), ('org.python.core.imp', 1, 0, -1), ('xmlreader.InputSource', 0, 0, -1), ('StringIO.StringIO', 1, 1, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
xml.sax.xmlreader: None -> <PyModule 'xml.sax.xmlreader' C:\Python27\lib\xml\sax\xmlreader.pyc imports=[('handler', 0, 0, -1), ('_exceptions.SAXNotSupportedException', 0, 0, -1), ('saxutils', 1, 0, -1), ('_exceptions.SAXNotRecognizedException', 0, 0, -1), ('_exceptions', 0, 0, -1)] binaries=[] datas=[]>
xml.sax.expatreader: None -> <PyModule 'xml.sax.expatreader' C:\Python27\lib\xml\sax\expatreader.pyc imports=[('xml.sax.handler', 0, 0, -1), ('xml.sax.handler.property_xml_string', 0, 0, -1), ('xml.sax.handler.feature_external_pes', 0, 0, -1), ('sys', 0, 0, -1), ('xml.sax.xmlreader', 0, 0, -1), ('xml.sax.handler.feature_string_interning', 0, 0, -1), ('xml.sax._exceptions', 0, 0, -1), ('weakref', 0, 1, -1), ('xml.sax', 0, 0, -1), ('xml.sax.handler.feature_namespace_prefixes', 0, 0, -1), ('xml.sax.saxutils', 0, 0, -1), ('xml.parsers', 0, 0, -1), ('xml.sax._exceptions.*', 0, 0, -1), ('xml.sax.handler.feature_validation', 0, 0, -1), ('xml.sax.handler.property_interning_dict', 0, 0, -1), ('xml.sax.handler.feature_namespaces', 0, 0, -1), ('xml.sax.saxutils', 0, 1, -1), ('_weakref', 0, 0, -1), ('xml.sax.handler.feature_external_ges', 0, 0, -1), ('xml.parsers.expat', 0, 0, -1)] binaries=[] datas=[]>
xml.sax.handler: None -> <PyModule 'xml.sax.handler' C:\Python27\lib\xml\sax\handler.pyc imports=[] binaries=[] datas=[]>
xml.sax._exceptions: None -> <PyModule 'xml.sax._exceptions' C:\Python27\lib\xml\sax\_exceptions.pyc imports=[('java.lang.Exception', 0, 1, -1), ('sys', 0, 0, -1), ('java.lang', 0, 1, -1)] binaries=[] datas=[]>
xml.sax.cStringIO: None -> None
xml.sax.xml: None -> None
xml.sax.StringIO: None -> None
xml.sax.sys: None -> None
xml.sax.org: None -> None
org: None -> None
  DEL org
xml.sax.os: None -> None
org: None -> None
  DEL org
xml.sax.java: None -> None
java: None -> None
  DEL java
java: None -> None
  DEL java
xml.sax.weakref: None -> None
xml.sax.saxutils: None -> <PyModule 'xml.sax.saxutils' C:\Python27\lib\xml\sax\saxutils.pyc imports=[('handler', 0, 0, -1), ('sys', 0, 0, -1), ('sys', 1, 1, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('xmlreader', 0, 0, -1), ('urllib', 0, 0, -1), ('io', 0, 0, -1), ('urlparse', 0, 0, -1)] binaries=[] datas=[]>
xml.sax._weakref: None -> None
xml.sax.types: None -> None
xml.sax.urllib: None -> None
xml.sax.io: None -> None
xml.sax.urlparse: None -> None
_scproxy: None -> None
  DEL _scproxy
_scproxy: None -> None
  DEL _scproxy
_scproxy: None -> None
  DEL _scproxy
rourl2path: None -> None
  DEL rourl2path
rourl2path: None -> None
  DEL rourl2path
rourl2path: None -> None
  DEL rourl2path
cl: None -> None
  DEL cl
cl: None -> None
  DEL cl
SOCKS: None -> None
  DEL SOCKS
EasyDialogs: None -> None
  DEL EasyDialogs
EasyDialogs: None -> None
  DEL EasyDialogs
pwd: None -> None
  DEL pwd
termios: None -> None
  DEL termios
xml.parsers.pyexpat: None -> None
pyexpat: None -> <ExtensionModule 'pyexpat' C:\Python27\DLLs\pyexpat.pyd imports=[('xmlparse', 0, 0, -1), ('xmltok', 0, 0, -1)] binaries=[] datas=[]>
xmlparse: None -> None
  DEL xmlparse
xmltok: None -> None
  DEL xmltok
DNS.Base: None -> <PyModule 'DNS.Base' C:\Python27\lib\site-packages\DNS\Base.pyc imports=[('Opcode', 0, 0, -1), ('Class', 0, 0, -1), ('select', 0, 0, -1), ('Type', 0, 0, -1), ('types', 0, 0, -1), ('sys', 1, 0, -1), ('string', 0, 0, -1), ('Lib', 0, 0, -1), ('asyncore', 0, 0, -1), ('socket', 0, 0, -1), ('random.SystemRandom', 0, 0, -1), ('random', 0, 0, -1), ('win32dns', 1, 1, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
DNS.Class: None -> <PyModule 'DNS.Class' C:\Python27\lib\site-packages\DNS\Class.pyc imports=[] binaries=[] datas=[]>
DNS.Opcode: None -> <PyModule 'DNS.Opcode' C:\Python27\lib\site-packages\DNS\Opcode.pyc imports=[] binaries=[] datas=[]>
DNS.Type: None -> <PyModule 'DNS.Type' C:\Python27\lib\site-packages\DNS\Type.pyc imports=[] binaries=[] datas=[]>
DNS.lazy: None -> <PyModule 'DNS.lazy' C:\Python27\lib\site-packages\DNS\lazy.pyc imports=[('Base', 0, 0, -1), ('Base.ServerError', 0, 0, -1)] binaries=[] datas=[]>
DNS.Lib: None -> <PyModule 'DNS.Lib' C:\Python27\lib\site-packages\DNS\Lib.pyc imports=[('Base', 0, 0, -1), ('Opcode', 0, 0, -1), ('Class', 0, 0, -1), ('types', 0, 0, -1), ('struct.pack', 0, 0, -1), ('Type', 0, 0, -1), ('struct', 0, 0, -1), ('socket.inet_aton', 0, 0, -1), ('time', 1, 0, -1), ('Base.DNSError', 0, 0, -1), ('Status', 0, 0, -1), ('socket', 0, 0, -1), ('socket.inet_ntoa', 0, 0, -1), ('struct.unpack', 0, 0, -1), ('timing', 1, 0, -1), ('DNS', 0, 0, -1)] binaries=[] datas=[]>
DNS.Status: None -> <PyModule 'DNS.Status' C:\Python27\lib\site-packages\DNS\Status.pyc imports=[] binaries=[] datas=[]>
DNS.select: None -> None
DNS.types: None -> None
DNS.sys: None -> None
DNS.string: None -> None
DNS.asyncore: None -> None
asyncore: None -> <PyModule 'asyncore' C:\Python27\lib\asyncore.pyc imports=[('select', 0, 0, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('errno.EPIPE', 0, 0, -1), ('errno.ESHUTDOWN', 0, 0, -1), ('errno.EALREADY', 0, 0, -1), ('errno.EBADF', 0, 0, -1), ('errno.EWOULDBLOCK', 0, 0, -1), ('sys', 0, 0, -1), ('errno.ECONNRESET', 0, 0, -1), ('errno.EAGAIN', 0, 0, -1), ('time', 0, 0, -1), ('fcntl', 0, 1, -1), ('errno.EINVAL', 0, 0, -1), ('socket', 0, 0, -1), ('errno.EINPROGRESS', 0, 0, -1), ('errno.EISCONN', 0, 0, -1), ('errno', 0, 0, -1), ('errno.ENOTCONN', 0, 0, -1), ('errno.ECONNABORTED', 0, 0, -1), ('errno.errorcode', 0, 0, -1), ('errno.EINTR', 0, 0, -1)] binaries=[] datas=[]>
DNS.socket: None -> None
DNS.random: None -> None
DNS.win32dns: None -> <PyModule 'DNS.win32dns' C:\Python27\lib\site-packages\DNS\win32dns.pyc imports=[('_winreg', 0, 0, -1), ('re', 0, 0, -1), ('re', 1, 0, -1)] binaries=[] datas=[]>
DNS.time: None -> None
DNS.struct: None -> None
DNS.timing: None -> None
timing: None -> None
  DEL timing
DNS.DNS: None -> None
fcntl: None -> None
  DEL fcntl
DNS._winreg: None -> None
DNS.re: None -> None
xmpp.traceback: None -> None
xmpp.os: None -> None
xmpp.types: None -> None
xmpp.sha: None -> None
sha: None -> <PyModule 'sha' C:\Python27\lib\sha.pyc imports=[('hashlib', 0, 0, -1), ('warnings', 0, 0, -1), ('hashlib.sha1', 0, 0, -1)] binaries=[] datas=[]>
xmpp.md5: None -> None
md5: None -> <PyModule 'md5' C:\Python27\lib\md5.pyc imports=[('hashlib.md5', 0, 0, -1), ('hashlib', 0, 0, -1), ('warnings', 0, 0, -1)] binaries=[] datas=[]>
xmpp.re: None -> None
xmpp.random: None -> None
xmpp.math: None -> None
win32gui: None -> <ExtensionModule 'win32gui' C:\Python27\lib\site-packages\win32\win32gui.pyd imports=[] binaries=[] datas=[]>
pyglet.image: None -> <PkgModule 'pyglet.image' C:\Python27\lib\site-packages\pyglet\image\__init__.pyc imports=[('ctypes', 0, 0, -1), ('re', 0, 0, -1), ('pyglet.window', 0, 0, -1), ('sys', 0, 0, -1), ('math', 0, 0, -1), ('pyglet.gl.gl_info', 0, 0, -1), ('StringIO', 0, 0, -1), ('StringIO.StringIO', 0, 0, -1), ('pyglet.image.codecs', 0, 0, -1), ('warnings', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.image.atlas', 0, 0, -1), ('math.ceil', 0, 0, -1), ('pyglet.window.*', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.graphics', 0, 0, -1), ('pyglet', 0, 0, -1), ('weakref', 0, 0, -1)] binaries=[] datas=[]>
pyglet.lib: None -> <PyModule 'pyglet.lib' C:\Python27\lib\site-packages\pyglet\lib.pyc imports=[('ctypes', 0, 0, -1), ('re', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('ctypes.util', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.pyglet: None -> None
pyglet.resource: None -> <PyModule 'pyglet.resource' C:\Python27\lib\site-packages\pyglet\resource.pyc imports=[('urllib2', 1, 0, -1), ('weakref', 0, 0, -1), ('pyglet.font', 1, 0, -1), ('os', 0, 0, -1), ('pyglet', 1, 0, -1), ('StringIO', 0, 0, -1), ('pyglet.media', 1, 0, -1), ('urlparse', 1, 0, -1), ('zipfile', 0, 0, -1), ('pyglet', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
pyglet.sys: None -> None
pyglet.media: None -> <PkgModule 'pyglet.media' C:\Python27\lib\site-packages\pyglet\media\__init__.pyc imports=[('pyglet.clock', 0, 0, -1), ('ctypes', 0, 0, -1), ('pyglet.image.Animation', 1, 0, -1), ('sys', 0, 0, -1), ('pyglet.image.AnimationFrame', 1, 0, -1), ('pyglet.media.drivers.silent', 0, 1, -1), ('pyglet.media.drivers.alsa', 0, 1, -1), ('pyglet', 0, 1, -1), ('StringIO', 0, 0, -1), ('pyglet.media.drivers.directsound', 0, 1, -1), ('pyglet.media', 0, 1, -1), ('pyglet.image', 1, 0, -1), ('pyglet.media.drivers.openal', 0, 1, -1), ('pyglet.event', 0, 0, -1), ('pyglet.media.avbin', 0, 1, -1), ('time', 0, 0, -1), ('pyglet', 0, 0, -1), ('pyglet.media.riff', 0, 1, -1)] binaries=[] datas=[]>
pyglet.os: None -> None
pyglet.text: None -> <PkgModule 'pyglet.text' C:\Python27\lib\site-packages\pyglet\text\__init__.pyc imports=[('pyglet.text.caret', 0, 0, -1), ('pyglet.text', 0, 0, -1), ('pyglet.text.formats.plaintext', 1, 1, -1), ('pyglet.text.layout', 0, 0, -1), ('os.path', 0, 0, -1), ('pyglet.text.formats.attributed', 1, 1, -1), ('pyglet.text.document', 0, 0, -1), ('pyglet.text.formats', 1, 1, -1), ('pyglet.text.formats.html', 1, 1, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.app: None -> <PkgModule 'pyglet.app' C:\Python27\lib\site-packages\pyglet\app\__init__.pyc imports=[('pyglet.clock', 0, 0, -1), ('pyglet.app.xlib.XlibEventLoop', 0, 1, -1), ('sys', 0, 0, -1), ('pyglet.app.xlib', 0, 1, -1), ('pyglet', 0, 1, -1), ('pyglet.app.carbon', 0, 1, -1), ('pyglet.app.carbon.CarbonEventLoop', 0, 1, -1), ('pyglet.app.win32', 0, 1, -1), ('pyglet.window', 1, 0, -1), ('pyglet.window.Window', 1, 0, -1), ('pyglet.event', 0, 0, -1), ('pyglet.app.win32.Win32EventLoop', 0, 1, -1), ('pyglet', 0, 0, -1), ('weakref', 0, 0, -1)] binaries=[] datas=[]>
pyglet.ctypes: None -> None
ctypes: None -> <PkgModule 'ctypes' C:\Python27\lib\ctypes\__init__.pyc imports=[('_ctypes.set_errno', 0, 0, -1), ('_ctypes._cast_addr', 0, 0, -1), ('_ctypes.FUNCFLAG_USE_ERRNO', 0, 0, -1), ('_ctypes._memmove_addr', 0, 0, -1), ('os', 0, 0, -1), ('struct', 0, 0, -1), ('_ctypes.get_last_error', 0, 1, -1), ('ctypes._endian.BigEndianStructure', 0, 0, -1), ('_ctypes._memset_addr', 0, 0, -1), ('_ctypes._wstring_at_addr', 0, 0, -1), ('_ctypes.set_conversion_mode', 0, 0, -1), ('_ctypes.alignment', 0, 0, -1), ('sys', 0, 0, -1), ('_ctypes.Structure', 0, 0, -1), ('_ctypes._string_at_addr', 0, 0, -1), ('_ctypes._SimpleCData', 0, 1, -1), ('_ctypes.FUNCFLAG_USE_LASTERROR', 0, 0, -1), ('_ctypes.CFuncPtr', 0, 0, -1), ('_ctypes.Union', 0, 0, -1), ('struct.calcsize', 1, 0, -1), ('_ctypes', 0, 0, -1), ('_ctypes.ArgumentError', 0, 0, -1), ('_ctypes.dlopen', 0, 1, -1), ('struct', 1, 0, -1), ('_ctypes.RTLD_GLOBAL', 0, 0, -1), ('_ctypes.LoadLibrary', 0, 1, -1), ('_ctypes.get_errno', 0, 0, -1), ('_ctypes.resize', 0, 0, -1), ('_ctypes.POINTER', 0, 0, -1), ('_ctypes.set_last_error', 0, 1, -1), ('_ctypes.FUNCFLAG_CDECL', 0, 0, -1), ('_ctypes.FormatError', 0, 1, -1), ('_ctypes.pointer', 0, 0, -1), ('_ctypes.RTLD_LOCAL', 0, 0, -1), ('_ctypes._pointer_type_cache', 0, 0, -1), ('_ctypes._check_HRESULT', 0, 1, -1), ('_ctypes._SimpleCData', 0, 0, -1), ('struct.calcsize', 0, 0, -1), ('ctypes._endian.LittleEndianStructure', 0, 0, -1), ('_ctypes.FUNCFLAG_PYTHONAPI', 0, 0, -1), ('_ctypes.FUNCFLAG_STDCALL', 0, 1, -1), ('_ctypes', 0, 1, -1), ('ctypes._endian', 0, 0, -1), ('_ctypes.sizeof', 0, 0, -1), ('_ctypes.addressof', 0, 0, -1), ('_ctypes.__version__', 0, 0, -1), ('_ctypes._Pointer', 0, 0, -1), ('_ctypes.byref', 0, 0, -1), ('_ctypes.Array', 0, 0, -1)] binaries=[] datas=[]>
pyglet.event: None -> <PyModule 'pyglet.event' C:\Python27\lib\site-packages\pyglet\event.pyc imports=[('inspect', 0, 0, -1)] binaries=[] datas=[]>
pyglet.font: None -> <PkgModule 'pyglet.font' C:\Python27\lib\site-packages\pyglet\font\__init__.pyc imports=[('pyglet.gl.*', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('pyglet.font.carbon.CarbonFont', 0, 1, -1), ('sys', 0, 0, -1), ('math', 0, 0, -1), ('os', 0, 0, -1), ('pyglet.font.win32', 0, 1, -1), ('pyglet.font.win32.GDIPlusFont', 0, 1, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.window', 0, 0, -1), ('pyglet.font.carbon', 0, 1, -1), ('pyglet.font.win32.Win32Font', 0, 1, -1), ('pyglet.font.freetype.FreeTypeFont', 0, 1, -1), ('pyglet.font.freetype', 0, 1, -1), ('pyglet', 0, 0, -1), ('weakref', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window: None -> <PkgModule 'pyglet.window' C:\Python27\lib\site-packages\pyglet\window\__init__.pyc imports=[('pyglet.window.carbon.CarbonWindow', 0, 1, -1), ('pyglet.gl.gl_info', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet.window.win32.Win32Window', 0, 1, -1), ('pyglet.window.carbon.CarbonPlatform', 0, 1, -1), ('pyglet.app', 1, 0, -1), ('pyglet', 1, 0, -1), ('pyglet.window.carbon', 0, 1, -1), ('pyglet.window.key', 0, 0, -1), ('pyglet.window.xlib.XlibWindow', 0, 1, -1), ('pyglet.window.win32', 0, 1, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.window.win32.Win32Platform', 0, 1, -1), ('pyglet.window.xlib.XlibPlatform', 0, 1, -1), ('pprint', 0, 0, -1), ('pyglet.event', 0, 0, -1), ('pyglet.window.xlib', 0, 1, -1), ('pyglet.event.EventDispatcher', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.graphics: None -> <PkgModule 'pyglet.graphics' C:\Python27\lib\site-packages\pyglet\graphics\__init__.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('pyglet.graphics.vertexbuffer', 0, 0, -1), ('pyglet.graphics.vertexattribute', 0, 0, -1), ('pyglet.graphics.vertexdomain', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.graphics', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.clock: None -> <PyModule 'pyglet.clock' C:\Python27\lib\site-packages\pyglet\clock.pyc imports=[('ctypes', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet.lib', 0, 0, -1), ('pyglet.font', 1, 0, -1), ('getopt', 1, 0, -1), ('pyglet.font', 1, 1, -1), ('time', 0, 0, -1), ('pyglet.font.load', 1, 1, -1)] binaries=[] datas=[]>
pyglet.sprite: None -> <PyModule 'pyglet.sprite' C:\Python27\lib\site-packages\pyglet\sprite.pyc imports=[('pyglet.clock', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('sys', 0, 0, -1), ('math', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.event', 0, 0, -1), ('pyglet.graphics', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.com: None -> <PyModule 'pyglet.com' C:\Python27\lib\site-packages\pyglet\com.pyc imports=[('ctypes', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
pyglet.gl: None -> <PkgModule 'pyglet.gl' C:\Python27\lib\site-packages\pyglet\gl\__init__.pyc imports=[('pyglet.gl', 0, 0, -1), ('pyglet.gl.gl_info', 0, 0, -1), ('pyglet', 1, 0, -1), ('sys', 0, 0, -1), ('pyglet.gl.glext_missing', 0, 0, -1), ('pyglet.gl.gl.*', 0, 0, -1), ('pyglet.window.Window', 1, 0, -1), ('pyglet.app', 1, 0, -1), ('pprint', 1, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.gl', 0, 0, -1), ('pyglet.gl.glu', 0, 0, -1), ('pyglet.gl.glext_arb.*', 0, 0, -1), ('pyglet.gl.lib.GLException', 0, 0, -1), ('pyglet.gl.glext_arb', 0, 0, -1), ('pyglet.window', 0, 1, -1), ('pyglet.gl.glu.*', 0, 0, -1), ('pyglet.window', 1, 0, -1), ('pyglet', 0, 0, -1), ('pyglet.gl.glext_missing.*', 0, 0, -1)] binaries=[] datas=[]>
pyglet.image.ctypes: None -> None
pyglet.image.re: None -> None
pyglet.image.pyglet: None -> None
pyglet.image.sys: None -> None
pyglet.image.math: None -> None
pyglet.gl.gl_info: None -> <PyModule 'pyglet.gl.gl_info' C:\Python27\lib\site-packages\pyglet\gl\gl_info.pyc imports=[('pyglet.gl.gl.*', 0, 0, -1), ('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('warnings', 0, 0, -1), ('pyglet.gl.gl', 0, 0, -1)] binaries=[] datas=[]>
pyglet.image.StringIO: None -> None
pyglet.image.codecs: None -> <PkgModule 'pyglet.image.codecs' C:\Python27\lib\site-packages\pyglet\image\codecs\__init__.pyc imports=[('pyglet.image.codecs.png', 1, 0, -1), ('os.path', 0, 0, -1), ('pyglet.image.codecs.quicktime', 1, 0, -1), ('pyglet.image.codecs', 1, 0, -1), ('pyglet.image.codecs.pil', 1, 0, -1), ('pyglet.image.codecs.dds', 1, 0, -1), ('pyglet.image.codecs.gdkpixbuf2', 1, 0, -1), ('pyglet.image.codecs.gdiplus', 1, 0, -1), ('pyglet.image.codecs.bmp', 1, 0, -1)] binaries=[] datas=[]>
pyglet.image.warnings: None -> None
pyglet.image.atlas: None -> <PyModule 'pyglet.image.atlas' C:\Python27\lib\site-packages\pyglet\image\atlas.pyc imports=[('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.image.weakref: None -> None
ctypes._ctypes: None -> None
_ctypes: None -> <ExtensionModule '_ctypes' C:\Python27\DLLs\_ctypes.pyd imports=[] binaries=[] datas=[]>
ctypes.os: None -> None
ctypes.struct: None -> None
ctypes.ctypes: None -> None
ctypes._endian: None -> <PyModule 'ctypes._endian' C:\Python27\lib\ctypes\_endian.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
ctypes.sys: None -> None
pyglet.window.pyglet: None -> None
pyglet.window.carbon: None -> <PkgModule 'pyglet.window.carbon' C:\Python27\lib\site-packages\pyglet\window\carbon\__init__.pyc imports=[('pyglet.window.WindowException', 0, 0, -1), ('pyglet.window', 0, 0, -1), ('MacOS', 1, 0, -1), ('pyglet.lib', 0, 0, -1), ('warnings', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('unicodedata', 0, 0, -1), ('pyglet.window.carbon.quartzkey', 0, 0, -1), ('pyglet.window.Platform', 0, 0, -1), ('pyglet.window.carbon.constants.*', 0, 0, -1), ('pyglet.window.Display', 0, 0, -1), ('pyglet.app', 1, 1, -1), ('pyglet.window.MouseCursor', 0, 0, -1), ('pyglet.event.EventDispatcher', 0, 0, -1), ('pyglet.gl.gl_info', 0, 0, -1), ('pyglet.window.BaseWindow', 0, 0, -1), ('os.path', 0, 0, -1), ('pyglet.window.carbon.types.*', 0, 0, -1), ('pyglet.window.carbon.types', 0, 0, -1), ('pyglet', 1, 0, -1), ('pyglet.event', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet', 1, 1, -1), ('pyglet.window.mouse', 0, 0, -1), ('ctypes', 0, 0, -1), ('pyglet.window.key', 0, 0, -1), ('pyglet.window.event', 0, 0, -1), ('pyglet.gl.agl', 0, 0, -1), ('pyglet.gl.glu_info', 0, 0, -1), ('pyglet.app', 1, 0, -1), ('pyglet.window.DefaultMouseCursor', 0, 0, -1), ('pyglet.window._PlatformEventHandler', 0, 0, -1), ('pyglet.window.carbon.constants', 0, 0, -1), ('pyglet.window.Screen', 0, 0, -1), ('pyglet.window.carbon.quartzkey.keymap', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.carbon.CarbonWindow: None -> None
  DEL pyglet.window.carbon.CarbonWindow
pyglet.window.sys: None -> None
pyglet.window.win32: None -> <PkgModule 'pyglet.window.win32' C:\Python27\lib\site-packages\pyglet\window\win32\__init__.pyc imports=[('pyglet.window.WindowException', 0, 0, -1), ('pyglet.window', 0, 0, -1), ('pyglet.window.win32.types.*', 0, 0, -1), ('warnings', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('unicodedata', 0, 0, -1), ('pyglet.window.Platform', 0, 0, -1), ('pyglet.gl.wgl', 0, 0, -1), ('traceback', 0, 1, -1), ('pyglet.gl.wglext_arb', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet.window._PlatformEventHandler', 0, 0, -1), ('pyglet.window.win32.constants.*', 0, 0, -1), ('pyglet.window.win32.winkey', 0, 0, -1), ('pyglet.app', 1, 1, -1), ('pyglet.gl.wgl_info', 0, 0, -1), ('pyglet.event.EventDispatcher', 0, 0, -1), ('pyglet.gl.gl_info', 0, 0, -1), ('pyglet.window.BaseWindow', 0, 0, -1), ('pyglet.window.Display', 0, 0, -1), ('pyglet.window.DefaultMouseCursor', 0, 0, -1), ('pyglet.window.win32.types', 0, 0, -1), ('pyglet', 1, 0, -1), ('pyglet.event', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet', 1, 1, -1), ('pyglet.window.mouse', 0, 0, -1), ('ctypes', 0, 0, -1), ('pyglet.window.key', 0, 0, -1), ('pyglet.window.event', 0, 0, -1), ('pyglet.gl.glu_info', 0, 0, -1), ('pyglet.window.win32.winkey.*', 0, 0, -1), ('pyglet.window.win32.constants', 0, 0, -1), ('pyglet.window.MouseCursor', 0, 0, -1), ('pyglet.window.Screen', 0, 0, -1), ('pyglet.app', 1, 0, -1), ('pyglet', 0, 0, -1)] binaries=[('user32.dll', 'C:\\Windows\\system32\\user32.dll', 'BINARY'), ('gdi32.dll', 'C:\\Windows\\system32\\gdi32.dll', 'BINARY')] datas=[]>
pyglet.window.win32.Win32Window: None -> None
  DEL pyglet.window.win32.Win32Window
pyglet.window.carbon.CarbonPlatform: None -> None
  DEL pyglet.window.carbon.CarbonPlatform
pyglet.window.key: None -> <PyModule 'pyglet.window.key' C:\Python27\lib\site-packages\pyglet\window\key.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.xlib: None -> <PkgModule 'pyglet.window.xlib' C:\Python27\lib\site-packages\pyglet\window\xlib\__init__.pyc imports=[('pyglet.window.WindowException', 0, 0, -1), ('pyglet.window', 0, 0, -1), ('pyglet.window.xlib', 0, 0, -1), ('warnings', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('traceback', 1, 1, -1), ('unicodedata', 0, 0, -1), ('pyglet.window.MouseCursorException', 0, 0, -1), ('pyglet.window.Platform', 0, 0, -1), ('pyglet.window.NoSuchDisplayException', 0, 0, -1), ('pyglet.gl.glxext_mesa', 0, 0, -1), ('pyglet.window.xlib.xlib', 0, 0, -1), ('pyglet.event.EventDispatcher', 0, 0, -1), ('pyglet.gl.gl_info', 0, 0, -1), ('pyglet.window.BaseWindow', 0, 0, -1), ('pyglet.window.Display', 0, 0, -1), ('sys', 1, 0, -1), ('pyglet.gl.glxext_arb', 0, 0, -1), ('pyglet.window.DefaultMouseCursor', 0, 0, -1), ('pyglet.window.xlib.xinerama', 0, 0, -1), ('pyglet.gl.glx', 0, 0, -1), ('pyglet.window.ImageMouseCursor', 0, 0, -1), ('pyglet.event', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.window.mouse', 0, 0, -1), ('ctypes', 0, 0, -1), ('pyglet.window.key', 0, 0, -1), ('pyglet.window.event', 0, 0, -1), ('pyglet.gl.glu_info', 0, 0, -1), ('pyglet.gl.glx_info', 0, 0, -1), ('pyglet.window.xlib.cursorfont', 0, 0, -1), ('pyglet.window._PlatformEventHandler', 0, 0, -1), ('pyglet.window.MouseCursor', 0, 0, -1), ('pyglet.window.xlib.xsync', 0, 0, -1), ('pyglet.window.Screen', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.xlib.XlibWindow: None -> None
  DEL pyglet.window.xlib.XlibWindow
pyglet.window.win32.Win32Platform: None -> None
  DEL pyglet.window.win32.Win32Platform
pyglet.window.xlib.XlibPlatform: None -> None
  DEL pyglet.window.xlib.XlibPlatform
pyglet.window.pprint: None -> None
pyglet.window.carbon.pyglet: None -> None
pyglet.window.WindowException: None -> None
  DEL pyglet.window.WindowException
pyglet.window.carbon.MacOS: None -> None
MacOS: None -> None
  DEL MacOS
pyglet.window.carbon.warnings: None -> None
pyglet.window.carbon.unicodedata: None -> None
pyglet.window.carbon.quartzkey: None -> <PyModule 'pyglet.window.carbon.quartzkey' C:\Python27\lib\site-packages\pyglet\window\carbon\quartzkey.pyc imports=[('pyglet.window.key', 0, 0, -1), ('pyglet.window', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.Platform: None -> None
  DEL pyglet.window.Platform
pyglet.window.carbon.constants: None -> <PyModule 'pyglet.window.carbon.constants' C:\Python27\lib\site-packages\pyglet\window\carbon\constants.pyc imports=[] binaries=[] datas=[]>
pyglet.window.Display: None -> None
  DEL pyglet.window.Display
pyglet.window.MouseCursor: None -> None
  DEL pyglet.window.MouseCursor
pyglet.window.BaseWindow: None -> None
  DEL pyglet.window.BaseWindow
pyglet.window.carbon.os: None -> None
pyglet.window.carbon.types: None -> <PyModule 'pyglet.window.carbon.types' C:\Python27\lib\site-packages\pyglet\window\carbon\types.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.gl.agl', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.carbon.ctypes: None -> None
pyglet.window.mouse: None -> <PyModule 'pyglet.window.mouse' C:\Python27\lib\site-packages\pyglet\window\mouse.pyc imports=[] binaries=[] datas=[]>
pyglet.window.event: None -> <PyModule 'pyglet.window.event' C:\Python27\lib\site-packages\pyglet\window\event.pyc imports=[('pyglet.window.mouse', 0, 0, -1), ('pyglet.window.key', 0, 0, -1), ('pyglet.window', 0, 0, -1), ('sys', 0, 0, -1), ('sys', 1, 1, -1)] binaries=[] datas=[]>
pyglet.gl.agl: None -> <PyModule 'pyglet.gl.agl' C:\Python27\lib\site-packages\pyglet\gl\agl.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.gl.lib.c_ptrdiff_t', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.lib.link_AGL', 0, 0, -1)] binaries=[] datas=[]>
pyglet.gl.glu_info: None -> <PyModule 'pyglet.gl.glu_info' C:\Python27\lib\site-packages\pyglet\gl\glu_info.pyc imports=[('pyglet.gl.glu', 0, 0, -1), ('ctypes', 0, 0, -1), ('pyglet.gl.glu.*', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('warnings', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.DefaultMouseCursor: None -> None
  DEL pyglet.window.DefaultMouseCursor
pyglet.window._PlatformEventHandler: None -> None
  DEL pyglet.window._PlatformEventHandler
pyglet.window.Screen: None -> None
  DEL pyglet.window.Screen
pyglet.re: None -> None
ctypes.util: None -> <PyModule 'ctypes.util' C:\Python27\lib\ctypes\util.pyc imports=[('struct', 1, 0, -1), ('sys', 0, 0, -1), ('errno', 0, 1, -1), ('os', 0, 0, -1), ('ctypes.macholib.dyld', 0, 1, -1), ('re', 0, 1, -1), ('tempfile', 0, 1, -1), ('ctypes.macholib.dyld.dyld_find', 0, 1, -1), ('ctypes', 1, 0, -1), ('imp', 1, 0, -1), ('ctypes.cdll', 1, 0, -1)] binaries=[] datas=[]>
ctypes.errno: None -> None
ctypes.macholib: None -> <PkgModule 'ctypes.macholib' C:\Python27\lib\ctypes\macholib\__init__.pyc imports=[] binaries=[] datas=[]>
ctypes.macholib.dyld: None -> <PyModule 'ctypes.macholib.dyld' C:\Python27\lib\ctypes\macholib\dyld.pyc imports=[('framework', 0, 0, -1), ('itertools', 0, 0, -1), ('dylib.dylib_info', 0, 0, -1), ('os', 0, 0, -1), ('itertools.*', 0, 0, -1), ('dylib', 0, 0, -1), ('framework.framework_info', 0, 0, -1)] binaries=[] datas=[]>
ctypes.re: None -> None
ctypes.tempfile: None -> None
ctypes.imp: None -> None
ctypes.cdll: None -> None
  DEL ctypes.cdll
ctypes.macholib.framework: None -> <PyModule 'ctypes.macholib.framework' C:\Python27\lib\ctypes\macholib\framework.pyc imports=[('re', 0, 0, -1)] binaries=[] datas=[]>
ctypes.macholib.itertools: None -> None
ctypes.macholib.dylib: None -> <PyModule 'ctypes.macholib.dylib' C:\Python27\lib\ctypes\macholib\dylib.pyc imports=[('re', 0, 0, -1)] binaries=[] datas=[]>
ctypes.macholib.os: None -> None
ctypes.macholib.re: None -> None
pyglet.gl.pyglet: None -> None
pyglet.gl.sys: None -> None
pyglet.gl.glext_missing: None -> <PyModule 'pyglet.gl.glext_missing' C:\Python27\lib\site-packages\pyglet\gl\glext_missing.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.gl.lib.c_ptrdiff_t', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.lib.link_GL', 0, 0, -1)] binaries=[] datas=[]>
pyglet.gl.gl: None -> <PyModule 'pyglet.gl.gl' C:\Python27\lib\site-packages\pyglet\gl\gl.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.gl.lib.c_ptrdiff_t', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.lib.link_GL', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.Window: None -> None
  DEL pyglet.window.Window
pyglet.gl.pprint: None -> None
pyglet.gl.lib: None -> <PyModule 'pyglet.gl.lib' C:\Python27\lib\site-packages\pyglet\gl\lib.pyc imports=[('pyglet.gl.lib_agl.link_GLU', 0, 1, -1), ('ctypes', 0, 0, -1), ('pyglet.gl.lib_glx.link_GLU', 0, 1, -1), ('sys', 0, 0, -1), ('pyglet.gl.lib_glx', 0, 1, -1), ('pyglet.gl.lib_wgl.link_GLU', 0, 1, -1), ('pyglet', 1, 0, -1), ('pyglet.gl.lib_glx.link_GLX', 0, 1, -1), ('pyglet.gl.lib_agl', 0, 1, -1), ('pyglet.gl.lib_wgl.link_WGL', 0, 1, -1), ('pyglet.gl.lib_wgl.link_GL', 0, 1, -1), ('pyglet.gl.lib_agl.link_AGL', 0, 1, -1), ('pyglet.gl.lib_agl.link_GL', 0, 1, -1), ('pyglet.gl.lib_glx.link_GL', 0, 1, -1), ('pyglet.gl', 1, 0, -1), ('pyglet', 0, 0, -1), ('pyglet.gl.lib_wgl', 0, 1, -1)] binaries=[] datas=[]>
pyglet.gl.glu: None -> <PyModule 'pyglet.gl.glu' C:\Python27\lib\site-packages\pyglet\gl\glu.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.gl.lib.c_ptrdiff_t', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.lib.link_GLU', 0, 0, -1)] binaries=[] datas=[]>
pyglet.gl.glext_arb: None -> <PyModule 'pyglet.gl.glext_arb' C:\Python27\lib\site-packages\pyglet\gl\glext_arb.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.gl.lib.c_ptrdiff_t', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.lib.link_GL', 0, 0, -1)] binaries=[] datas=[]>
pyglet.gl.ctypes: None -> None
pyglet.gl.warnings: None -> None
pyglet.gl.lib_agl: None -> <PyModule 'pyglet.gl.lib_agl' C:\Python27\lib\site-packages\pyglet\gl\lib_agl.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.lib.missing_function', 0, 0, -1), ('pyglet.lib', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.lib.decorate_function', 0, 0, -1), ('ctypes.*', 0, 0, -1)] binaries=[] datas=[]>
pyglet.gl.lib_glx: None -> <PyModule 'pyglet.gl.lib_glx' C:\Python27\lib\site-packages\pyglet\gl\lib_glx.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.lib.missing_function', 0, 0, -1), ('pyglet.lib', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.lib.decorate_function', 0, 0, -1), ('ctypes.*', 0, 0, -1)] binaries=[] datas=[]>
pyglet.gl.lib_wgl: None -> <PyModule 'pyglet.gl.lib_wgl' C:\Python27\lib\site-packages\pyglet\gl\lib_wgl.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.gl_info', 1, 1, -1), ('pyglet.gl.lib.missing_function', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.lib._TraceLibrary', 0, 1, -1), ('pyglet.gl', 1, 1, -1), ('pyglet.gl.lib.decorate_function', 0, 0, -1), ('pyglet.gl.current_context', 1, 0, -1), ('pyglet.lib', 0, 1, -1), ('ctypes.*', 0, 0, -1), ('pyglet.gl', 1, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.gl.current_context: None -> None
  DEL pyglet.gl.current_context
pyglet.app.pyglet: None -> None
pyglet.app.xlib: None -> <PyModule 'pyglet.app.xlib' C:\Python27\lib\site-packages\pyglet\app\xlib.pyc imports=[('pyglet.app.displays', 0, 0, -1), ('select', 0, 0, -1), ('pyglet.app.windows', 0, 0, -1), ('pyglet.window.xlib', 0, 0, -1), ('pyglet.window.xlib.xlib', 0, 0, -1), ('pyglet.app.BaseEventLoop', 0, 0, -1), ('pyglet.app', 0, 0, -1)] binaries=[] datas=[]>
pyglet.app.sys: None -> None
pyglet.app.carbon: None -> <PyModule 'pyglet.app.carbon' C:\Python27\lib\site-packages\pyglet\app\carbon.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.app.windows', 0, 0, -1), ('pyglet.window.carbon._oscheck', 0, 0, -1), ('pyglet.window.carbon.carbon', 0, 0, -1), ('pyglet.app.BaseEventLoop', 0, 0, -1), ('pyglet.window.carbon.constants', 0, 0, -1), ('pyglet.app', 0, 0, -1), ('pyglet.window.carbon.types', 0, 0, -1), ('pyglet.window.carbon', 0, 0, -1)] binaries=[] datas=[]>
pyglet.app.win32: None -> <PyModule 'pyglet.app.win32' C:\Python27\lib\site-packages\pyglet\app\win32.pyc imports=[('pyglet.window.win32', 0, 0, -1), ('ctypes', 0, 0, -1), ('pyglet.window.win32.constants', 0, 0, -1), ('pyglet.app.windows', 0, 0, -1), ('pyglet.app.BaseEventLoop', 0, 0, -1), ('pyglet.window.win32._user32', 0, 0, -1), ('pyglet.window.win32.types', 0, 0, -1), ('pyglet.app', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.Window: None -> None
  DEL pyglet.window.Window
pyglet.app.weakref: None -> None
pyglet.getopt: None -> None
pyglet.time: None -> None
pyglet.font.load: None -> None
  DEL pyglet.font.load
pyglet.font.pyglet: None -> None
pyglet.font.carbon: None -> <PyModule 'pyglet.font.carbon' C:\Python27\lib\site-packages\pyglet\font\carbon.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet.font.base', 0, 0, -1), ('math', 0, 0, -1), ('pyglet.window.carbon._oscheck', 0, 0, -1), ('pyglet.window.carbon.carbon', 0, 0, -1), ('pyglet.window.carbon.types', 0, 0, -1), ('pyglet.window.carbon.types.*', 0, 0, -1), ('pyglet.font', 0, 0, -1), ('pyglet.window.carbon', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.window.carbon._create_cfstring', 0, 0, -1), ('sys.byteorder', 0, 0, -1)] binaries=[] datas=[]>
pyglet.font.sys: None -> None
pyglet.font.math: None -> None
pyglet.font.os: None -> None
pyglet.font.win32: None -> <PyModule 'pyglet.font.win32' C:\Python27\lib\site-packages\pyglet\font\win32.pyc imports=[('pyglet.image', 0, 0, -1), ('pyglet.font.base', 0, 0, -1), ('pyglet.window.win32.types.*', 0, 0, -1), ('pyglet.window.win32._user32', 0, 0, -1), ('sys.byteorder', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet.image.codecs.gdiplus.gdiplus', 0, 0, -1), ('pyglet.window.win32.constants.*', 0, 0, -1), ('pyglet.window.win32._kernel32', 0, 0, -1), ('pyglet.image.codecs.gdiplus.BitmapData', 0, 0, -1), ('pyglet.window.win32._gdi32', 0, 0, -1), ('pyglet.image.codecs.gdiplus.PixelFormat32bppARGB', 0, 0, -1), ('pyglet.window.win32.types', 0, 0, -1), ('pyglet.font', 0, 0, -1), ('pyglet.image.codecs.gdiplus.ImageLockModeRead', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('os', 1, 0, -1), ('pyglet.window.win32', 0, 0, -1), ('ctypes', 0, 0, -1), ('pyglet.image.codecs.gdiplus', 0, 0, -1), ('math', 0, 0, -1), ('pyglet.window.win32.constants', 0, 0, -1), ('pyglet.image.codecs.gdiplus.Rect', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.font.freetype: None -> <PyModule 'pyglet.font.freetype' C:\Python27\lib\site-packages\pyglet\font\freetype.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.font.base', 0, 0, -1), ('pyglet.lib', 0, 0, -1), ('pyglet.font.freetype_lib', 0, 0, -1), ('warnings', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('pyglet.font', 0, 0, -1), ('warnings.warn', 0, 0, -1), ('pyglet', 0, 0, -1), ('pyglet.font.freetype_lib.*', 0, 0, -1)] binaries=[] datas=[]>
pyglet.font.weakref: None -> None
pyglet.font.ctypes: None -> None
pyglet.font.base: None -> <PyModule 'pyglet.font.base' C:\Python27\lib\site-packages\pyglet\font\base.pyc imports=[('pyglet.gl', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('unicodedata', 0, 0, -1), ('pyglet', 0, 0, -1), ('pyglet.image', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.carbon._oscheck: None -> None
  DEL pyglet.window.carbon._oscheck
pyglet.window.carbon.carbon: None -> None
  DEL pyglet.window.carbon.carbon
pyglet.window.carbon._create_cfstring: None -> None
  DEL pyglet.window.carbon._create_cfstring
pyglet.font.unicodedata: None -> None
pyglet.window.win32.types: None -> <PyModule 'pyglet.window.win32.types' C:\Python27\lib\site-packages\pyglet\window\win32\types.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.win32._user32: None -> None
  DEL pyglet.window.win32._user32
pyglet.image.codecs.gdiplus: None -> <PyModule 'pyglet.image.codecs.gdiplus' C:\Python27\lib\site-packages\pyglet\image\codecs\gdiplus.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('pyglet.image.codecs.*', 0, 0, -1), ('pyglet.window.win32.constants.*', 0, 0, -1), ('pyglet.window.win32.types.*', 0, 0, -1), ('pyglet.image.*', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.window.win32.constants', 0, 0, -1), ('pyglet.window.win32.types', 0, 0, -1), ('pyglet.image.codecs', 0, 0, -1), ('ctypes.*', 0, 0, -1)] binaries=[('ole32.dll', 'C:\\Windows\\system32\\ole32.dll', 'BINARY'), ('gdiplus.dll', 'C:\\Windows\\system32\\gdiplus.dll', 'BINARY')] datas=[]>
pyglet.window.win32.constants: None -> <PyModule 'pyglet.window.win32.constants' C:\Python27\lib\site-packages\pyglet\window\win32\constants.pyc imports=[] binaries=[] datas=[]>
pyglet.window.win32._kernel32: None -> None
  DEL pyglet.window.win32._kernel32
pyglet.window.win32._gdi32: None -> None
  DEL pyglet.window.win32._gdi32
pyglet.window.win32.pyglet: None -> None
pyglet.window.WindowException: None -> None
  DEL pyglet.window.WindowException
pyglet.window.win32.warnings: None -> None
pyglet.window.win32.unicodedata: None -> None
pyglet.window.Platform: None -> None
  DEL pyglet.window.Platform
pyglet.gl.wgl: None -> <PyModule 'pyglet.gl.wgl' C:\Python27\lib\site-packages\pyglet\gl\wgl.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.gl.lib.c_ptrdiff_t', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.lib.link_WGL', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.win32.traceback: None -> None
pyglet.gl.wglext_arb: None -> <PyModule 'pyglet.gl.wglext_arb' C:\Python27\lib\site-packages\pyglet\gl\wglext_arb.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.lib.link_WGL', 0, 0, -1), ('pyglet.gl.lib.c_ptrdiff_t', 0, 0, -1), ('pyglet.gl.lib.c_void', 0, 0, -1), ('ctypes.*', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.win32.sys: None -> None
pyglet.window._PlatformEventHandler: None -> None
  DEL pyglet.window._PlatformEventHandler
pyglet.window.win32.winkey: None -> <PyModule 'pyglet.window.win32.winkey' C:\Python27\lib\site-packages\pyglet\window\win32\winkey.pyc imports=[('pyglet.window.win32.constants.*', 0, 0, -1), ('pyglet.window.win32.constants', 0, 0, -1), ('pyglet.window.key', 0, 0, -1), ('pyglet.window', 0, 0, -1)] binaries=[] datas=[]>
pyglet.gl.wgl_info: None -> <PyModule 'pyglet.gl.wgl_info' C:\Python27\lib\site-packages\pyglet\gl\wgl_info.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.gl_info', 0, 0, -1), ('pyglet.gl.wglext_arb.*', 0, 0, -1), ('pyglet.gl.wglext_arb', 0, 0, -1), ('pyglet.gl.gl.*', 0, 0, -1), ('warnings', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.gl', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.gl.lib.MissingFunctionException', 0, 0, -1), ('pyglet.gl.wgl.*', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.gl.wgl', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.BaseWindow: None -> None
  DEL pyglet.window.BaseWindow
pyglet.window.Display: None -> None
  DEL pyglet.window.Display
pyglet.window.DefaultMouseCursor: None -> None
  DEL pyglet.window.DefaultMouseCursor
pyglet.window.win32.ctypes: None -> None
pyglet.window.MouseCursor: None -> None
  DEL pyglet.window.MouseCursor
pyglet.window.Screen: None -> None
  DEL pyglet.window.Screen
pyglet.inspect: None -> None
pyglet.image.codecs.pyglet: None -> None
pyglet.image.codecs.png: None -> <PyModule 'pyglet.image.codecs.png' C:\Python27\lib\site-packages\pyglet\image\codecs\png.pyc imports=[('pyglet.image.codecs.*', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('pyglet.image.codecs.pypng', 0, 0, -1), ('array', 0, 0, -1), ('pyglet.image.*', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.image.codecs', 0, 0, -1)] binaries=[] datas=[]>
pyglet.image.codecs.os: None -> None
pyglet.image.codecs.quicktime: None -> <PyModule 'pyglet.image.codecs.quicktime' C:\Python27\lib\site-packages\pyglet\image\codecs\quicktime.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet.image.codecs.*', 0, 0, -1), ('pyglet.window.carbon._oscheck', 0, 0, -1), ('pyglet.window.carbon.carbon', 0, 0, -1), ('pyglet.image.*', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.window.carbon.types.*', 0, 0, -1), ('pyglet.window.carbon.quicktime', 0, 0, -1), ('pyglet.window.carbon.constants', 0, 0, -1), ('pyglet.window.carbon.constants._name', 0, 0, -1), ('pyglet.image.codecs', 0, 0, -1), ('pyglet.window.carbon.types', 0, 0, -1), ('pyglet.window.carbon', 0, 0, -1), ('ctypes.*', 0, 0, -1)] binaries=[] datas=[]>
pyglet.image.codecs.pil: None -> <PyModule 'pyglet.image.codecs.pil' C:\Python27\lib\site-packages\pyglet\image\codecs\pil.pyc imports=[('pyglet.image.codecs.*', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('os.path', 0, 0, -1), ('pyglet.image.*', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.image.codecs', 0, 0, -1), ('Image', 0, 0, -1)] binaries=[] datas=[]>
pyglet.image.codecs.dds: None -> <PyModule 'pyglet.image.codecs.dds' C:\Python27\lib\site-packages\pyglet\image\codecs\dds.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('pyglet.image.codecs.s3tc', 0, 0, -1), ('struct', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.image.CompressedImageData', 0, 0, -1), ('pyglet.image.codecs', 0, 0, -1), ('ctypes.*', 0, 0, -1)] binaries=[] datas=[]>
pyglet.image.codecs.gdkpixbuf2: None -> <PyModule 'pyglet.image.codecs.gdkpixbuf2' C:\Python27\lib\site-packages\pyglet\image\codecs\gdkpixbuf2.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('pyglet.image.codecs.*', 0, 0, -1), ('pyglet.lib', 0, 0, -1), ('pyglet.image.*', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.window', 0, 0, -1), ('pyglet.image.codecs', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.image.codecs.gif', 0, 0, -1)] binaries=[] datas=[]>
pyglet.image.codecs.bmp: None -> <PyModule 'pyglet.image.codecs.bmp' C:\Python27\lib\site-packages\pyglet\image\codecs\bmp.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.image.codecs.ImageDecodeException', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('pyglet.image.ImageData', 0, 0, -1), ('pyglet.image.codecs.ImageDecoder', 0, 0, -1), ('pyglet.image.codecs', 0, 0, -1)] binaries=[] datas=[]>
pyglet.image.codecs.pypng: None -> <PyModule 'pyglet.image.codecs.pypng' C:\Python27\lib\site-packages\pyglet\image\codecs\pypng.pyc imports=[('optparse.OptionParser', 1, 0, -1), ('sys', 0, 0, -1), ('math', 0, 0, -1), ('array', 0, 0, -1), ('struct', 0, 0, -1), ('optparse', 1, 0, -1), ('array.array', 0, 0, -1), ('zlib', 0, 0, -1)] binaries=[] datas=[]>
pyglet.image.codecs.array: None -> None
pyglet.image.codecs.optparse: None -> None
pyglet.image.codecs.sys: None -> None
pyglet.image.codecs.math: None -> None
pyglet.image.codecs.struct: None -> None
pyglet.image.codecs.zlib: None -> None
pyglet.image.codecs.ctypes: None -> None
pyglet.window.carbon._oscheck: None -> None
  DEL pyglet.window.carbon._oscheck
pyglet.window.carbon.carbon: None -> None
  DEL pyglet.window.carbon.carbon
pyglet.window.carbon.quicktime: None -> None
  DEL pyglet.window.carbon.quicktime
pyglet.image.codecs.Image: None -> None
Image: None -> None
  DEL Image
pyglet.image.codecs.s3tc: None -> <PyModule 'pyglet.image.codecs.s3tc' C:\Python27\lib\site-packages\pyglet\image\codecs\s3tc.pyc imports=[('ctypes', 0, 0, -1), ('re', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('pyglet.image.AbstractImage', 0, 0, -1), ('pyglet.gl.gl_info', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.image.Texture', 0, 0, -1)] binaries=[] datas=[]>
pyglet.image.CompressedImageData: None -> None
  DEL pyglet.image.CompressedImageData
pyglet.image.codecs.re: None -> None
pyglet.image.AbstractImage: None -> None
  DEL pyglet.image.AbstractImage
pyglet.image.Texture: None -> None
  DEL pyglet.image.Texture
pyglet.image.codecs.gif: None -> <PyModule 'pyglet.image.codecs.gif' C:\Python27\lib\site-packages\pyglet\image\codecs\gif.pyc imports=[('pyglet.image.codecs.ImageDecodeException', 0, 0, -1), ('struct', 0, 0, -1), ('pyglet.image.codecs', 0, 0, -1)] binaries=[] datas=[]>
pyglet.image.codecs.ImageDecodeException: None -> None
  DEL pyglet.image.codecs.ImageDecodeException
pyglet.image.codecs.ImageDecodeException: None -> None
  DEL pyglet.image.codecs.ImageDecodeException
pyglet.image.ImageData: None -> None
  DEL pyglet.image.ImageData
pyglet.image.codecs.ImageDecoder: None -> None
  DEL pyglet.image.codecs.ImageDecoder
pyglet.font.freetype_lib: None -> <PyModule 'pyglet.font.freetype_lib' C:\Python27\lib\site-packages\pyglet\font\freetype_lib.pyc imports=[('base', 0, 0, -1), ('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('base.FontException', 0, 0, -1), ('pyglet.lib', 0, 0, -1)] binaries=[] datas=[]>
pyglet.font.warnings: None -> None
pyglet.app.displays: None -> None
  DEL pyglet.app.displays
pyglet.app.select: None -> None
pyglet.app.windows: None -> None
  DEL pyglet.app.windows
pyglet.window.xlib.xlib: None -> <PyModule 'pyglet.window.xlib.xlib' C:\Python27\lib\site-packages\pyglet\window\xlib\xlib.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.glx', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.lib', 0, 0, -1)] binaries=[] datas=[]>
pyglet.app.BaseEventLoop: None -> None
  DEL pyglet.app.BaseEventLoop
pyglet.window.xlib.pyglet: None -> None
pyglet.window.WindowException: None -> None
  DEL pyglet.window.WindowException
pyglet.window.xlib.warnings: None -> None
pyglet.window.xlib.traceback: None -> None
pyglet.window.xlib.unicodedata: None -> None
pyglet.window.MouseCursorException: None -> None
  DEL pyglet.window.MouseCursorException
pyglet.window.Platform: None -> None
  DEL pyglet.window.Platform
pyglet.window.NoSuchDisplayException: None -> None
  DEL pyglet.window.NoSuchDisplayException
pyglet.gl.glxext_mesa: None -> <PyModule 'pyglet.gl.glxext_mesa' C:\Python27\lib\site-packages\pyglet\gl\glxext_mesa.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.lib.link_GLX', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.BaseWindow: None -> None
  DEL pyglet.window.BaseWindow
pyglet.window.Display: None -> None
  DEL pyglet.window.Display
pyglet.window.xlib.sys: None -> None
pyglet.gl.glxext_arb: None -> <PyModule 'pyglet.gl.glxext_arb' C:\Python27\lib\site-packages\pyglet\gl\glxext_arb.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.lib.link_GLX', 0, 0, -1), ('pyglet.gl.lib.c_ptrdiff_t', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.DefaultMouseCursor: None -> None
  DEL pyglet.window.DefaultMouseCursor
pyglet.window.xlib.xinerama: None -> <PyModule 'pyglet.window.xlib.xinerama' C:\Python27\lib\site-packages\pyglet\window\xlib\xinerama.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.glx', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.window.xlib.xlib', 0, 0, -1), ('pyglet.lib', 0, 0, -1)] binaries=[] datas=[]>
pyglet.gl.glx: None -> <PyModule 'pyglet.gl.glx' C:\Python27\lib\site-packages\pyglet\gl\glx.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.lib.link_GLX', 0, 0, -1), ('pyglet.gl.lib', 0, 0, -1), ('pyglet.gl.lib.c_ptrdiff_t', 0, 0, -1), ('pyglet.gl.lib.c_void', 0, 0, -1), ('ctypes.*', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.ImageMouseCursor: None -> None
  DEL pyglet.window.ImageMouseCursor
pyglet.window.xlib.ctypes: None -> None
pyglet.gl.glx_info: None -> <PyModule 'pyglet.gl.glx_info' C:\Python27\lib\site-packages\pyglet\gl\glx_info.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.gl.glx.*', 0, 0, -1), ('pyglet.gl.glx.Display', 0, 0, -1), ('pyglet.gl.glx', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.xlib.cursorfont: None -> <PyModule 'pyglet.window.xlib.cursorfont' C:\Python27\lib\site-packages\pyglet\window\xlib\cursorfont.pyc imports=[] binaries=[] datas=[]>
pyglet.window._PlatformEventHandler: None -> None
  DEL pyglet.window._PlatformEventHandler
pyglet.window.MouseCursor: None -> None
  DEL pyglet.window.MouseCursor
pyglet.window.xlib.xsync: None -> <PyModule 'pyglet.window.xlib.xsync' C:\Python27\lib\site-packages\pyglet\window\xlib\xsync.pyc imports=[('ctypes', 0, 0, -1), ('xlib', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('pyglet.lib', 0, 0, -1)] binaries=[] datas=[]>
pyglet.window.Screen: None -> None
  DEL pyglet.window.Screen
pyglet.app.ctypes: None -> None
pyglet.app.windows: None -> None
  DEL pyglet.app.windows
pyglet.window.carbon._oscheck: None -> None
  DEL pyglet.window.carbon._oscheck
pyglet.window.carbon.carbon: None -> None
  DEL pyglet.window.carbon.carbon
pyglet.app.BaseEventLoop: None -> None
  DEL pyglet.app.BaseEventLoop
pyglet.app.windows: None -> None
  DEL pyglet.app.windows
pyglet.app.BaseEventLoop: None -> None
  DEL pyglet.app.BaseEventLoop
pyglet.window.win32._user32: None -> None
  DEL pyglet.window.win32._user32
pyglet.app.time: None -> None
pyglet.graphics.ctypes: None -> None
pyglet.graphics.pyglet: None -> None
pyglet.graphics.vertexbuffer: None -> <PyModule 'pyglet.graphics.vertexbuffer' C:\Python27\lib\site-packages\pyglet\graphics\vertexbuffer.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet', 1, 0, -1), ('pyglet.gl.gl_info', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.gl', 1, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.graphics.vertexattribute: None -> <PyModule 'pyglet.graphics.vertexattribute' C:\Python27\lib\site-packages\pyglet\graphics\vertexattribute.pyc imports=[('ctypes', 0, 0, -1), ('re', 0, 0, -1), ('pyglet.graphics.vertexbuffer', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.graphics', 0, 0, -1)] binaries=[] datas=[]>
pyglet.graphics.vertexdomain: None -> <PyModule 'pyglet.graphics.vertexdomain' C:\Python27\lib\site-packages\pyglet\graphics\vertexdomain.pyc imports=[('ctypes', 0, 0, -1), ('re', 0, 0, -1), ('pyglet.graphics.vertexbuffer', 0, 0, -1), ('pyglet.graphics.vertexattribute', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.graphics.allocation', 0, 0, -1), ('pyglet.graphics', 0, 0, -1)] binaries=[] datas=[]>
pyglet.graphics.sys: None -> None
pyglet.graphics.re: None -> None
pyglet.graphics.allocation: None -> <PyModule 'pyglet.graphics.allocation' C:\Python27\lib\site-packages\pyglet\graphics\allocation.pyc imports=[] binaries=[] datas=[]>
pyglet.urllib2: None -> None
urllib2: None -> <PyModule 'urllib2' C:\Python27\lib\urllib2.pyc imports=[('urllib.splithost', 0, 0, -1), ('urllib.splittag', 0, 0, -1), ('urllib.splitattr', 0, 0, -1), ('os', 0, 0, -1), ('email.utils', 1, 0, -1), ('urllib.unwrap', 0, 0, -1), ('warnings', 0, 0, -1), ('posixpath', 0, 0, -1), ('hashlib', 0, 0, -1), ('urllib.ftpwrapper', 0, 0, -1), ('urllib', 0, 0, -1), ('random', 0, 0, -1), ('types', 1, 0, -1), ('urllib.unquote', 0, 0, -1), ('cookielib', 1, 0, -1), ('urllib.quote', 0, 0, -1), ('sys', 0, 0, -1), ('urllib.localhost', 0, 0, -1), ('urllib.splittype', 0, 0, -1), ('cStringIO', 0, 0, -1), ('base64', 0, 0, -1), ('ftplib', 1, 0, -1), ('time', 0, 0, -1), ('bisect', 0, 0, -1), ('urlparse', 0, 0, -1), ('mimetypes', 1, 0, -1), ('urllib.splituser', 0, 0, -1), ('socket', 0, 0, -1), ('urllib.proxy_bypass', 0, 0, -1), ('urllib.getproxies', 0, 0, -1), ('mimetools', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('urllib.splitpasswd', 0, 0, -1), ('urllib.addinfourl', 0, 0, -1), ('urllib.splitvalue', 0, 0, -1), ('re', 0, 0, -1), ('urllib.splitport', 0, 0, -1), ('httplib', 0, 0, -1), ('urllib.url2pathname', 0, 0, -1), ('StringIO', 0, 1, -1), ('urllib.toBytes', 0, 0, -1)] binaries=[] datas=[]>
pyglet.weakref: None -> None
pyglet.StringIO: None -> None
pyglet.urlparse: None -> None
pyglet.zipfile: None -> None
cookielib: None -> <PyModule 'cookielib' C:\Python27\lib\cookielib.pyc imports=[('StringIO', 1, 0, -1), ('re', 0, 0, -1), ('urlparse', 0, 0, -1), ('logging', 1, 1, -1), ('copy', 0, 0, -1), ('calendar', 0, 0, -1), ('traceback', 1, 0, -1), ('threading', 0, 0, -1), ('_MozillaCookieJar', 0, 0, -1), ('_LWPCookieJar', 0, 0, -1), ('httplib', 0, 0, -1), ('_LWPCookieJar.lwp_cookie_str', 0, 0, -1), ('urllib', 0, 0, -1), ('_MozillaCookieJar.MozillaCookieJar', 0, 0, -1), ('warnings', 1, 0, -1), ('dummy_threading', 0, 1, -1), ('time', 0, 0, -1), ('_LWPCookieJar.LWPCookieJar', 0, 0, -1), ('calendar.timegm', 0, 0, -1)] binaries=[] datas=[]>
bisect: None -> <PyModule 'bisect' C:\Python27\lib\bisect.pyc imports=[('_bisect', 0, 0, -1), ('_bisect.*', 0, 0, -1)] binaries=[] datas=[]>
_MozillaCookieJar: None -> <PyModule '_MozillaCookieJar' C:\Python27\lib\_MozillaCookieJar.pyc imports=[('re', 0, 0, -1), ('cookielib.FileCookieJar', 0, 0, -1), ('cookielib', 0, 0, -1), ('cookielib.Cookie', 0, 0, -1), ('cookielib._warn_unhandled_exception', 0, 0, -1), ('cookielib.LoadError', 0, 0, -1), ('cookielib.MISSING_FILENAME_TEXT', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
_LWPCookieJar: None -> <PyModule '_LWPCookieJar' C:\Python27\lib\_LWPCookieJar.pyc imports=[('re', 0, 0, -1), ('cookielib.FileCookieJar', 0, 0, -1), ('cookielib', 0, 0, -1), ('cookielib.iso2time', 0, 0, -1), ('cookielib.Cookie', 0, 0, -1), ('cookielib._warn_unhandled_exception', 0, 0, -1), ('cookielib.LoadError', 0, 0, -1), ('cookielib.split_header_words', 0, 0, -1), ('cookielib.time2isoz', 0, 0, -1), ('cookielib.MISSING_FILENAME_TEXT', 0, 0, -1), ('time', 0, 0, -1), ('cookielib.join_header_words', 0, 0, -1)] binaries=[] datas=[]>
_dummy_threading: None -> None
  DEL _dummy_threading
_dummy_threading: None -> None
  DEL _dummy_threading
_dummy_threading: None -> None
  DEL _dummy_threading
_bisect: None -> <BuiltinModule '_bisect' None imports=[] binaries=[] datas=[]>
pyglet.media.pyglet: None -> None
pyglet.media.ctypes: None -> None
pyglet.image.Animation: None -> None
  DEL pyglet.image.Animation
pyglet.media.sys: None -> None
pyglet.image.AnimationFrame: None -> None
  DEL pyglet.image.AnimationFrame
pyglet.media.drivers: None -> <PkgModule 'pyglet.media.drivers' C:\Python27\lib\site-packages\pyglet\media\drivers\__init__.pyc imports=[] binaries=[] datas=[]>
pyglet.media.drivers.silent: None -> <PyModule 'pyglet.media.drivers.silent' C:\Python27\lib\site-packages\pyglet\media\drivers\silent.pyc imports=[('pyglet.media.AudioData', 0, 0, -1), ('pyglet.media', 0, 0, -1), ('pyglet.media.AudioPlayer', 0, 0, -1), ('pyglet.media.Listener', 0, 0, -1), ('pyglet.media.MediaException', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
pyglet.media.drivers.alsa: None -> <PkgModule 'pyglet.media.drivers.alsa' C:\Python27\lib\site-packages\pyglet\media\drivers\alsa\__init__.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.media', 0, 0, -1), ('pyglet.media.AudioPlayer', 0, 0, -1), ('pyglet.media.Listener', 0, 0, -1), ('pyglet.media.MediaException', 0, 0, -1), ('pyglet.media.drivers.alsa.asound', 0, 0, -1), ('pyglet.media.drivers.alsa', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.media.StringIO: None -> None
pyglet.media.drivers.directsound: None -> <PkgModule 'pyglet.media.drivers.directsound' C:\Python27\lib\site-packages\pyglet\media\drivers\directsound\__init__.pyc imports=[('pyglet.window.win32', 0, 0, -1), ('ctypes', 0, 0, -1), ('pyglet', 1, 0, -1), ('pyglet.media', 0, 0, -1), ('pyglet.media.AudioPlayer', 0, 0, -1), ('pyglet.media.drivers.directsound', 0, 0, -1), ('math', 0, 0, -1), ('pyglet.media.Listener', 0, 0, -1), ('pyglet.media.MediaException', 0, 0, -1), ('pyglet.clock', 1, 0, -1), ('pyglet.window.win32._user32', 0, 0, -1), ('pyglet.media.drivers.directsound.lib_dsound', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
pyglet.media.drivers.openal: None -> <PkgModule 'pyglet.media.drivers.openal' C:\Python27\lib\site-packages\pyglet\media\drivers\openal\__init__.pyc imports=[('pyglet.clock', 1, 1, -1), ('ctypes', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet.media', 0, 0, -1), ('pyglet.media.AudioPlayer', 0, 0, -1), ('pyglet.media.Listener', 0, 0, -1), ('pyglet.media.MediaException', 0, 0, -1), ('pyglet.media.drivers.openal.lib_alc', 0, 0, -1), ('pyglet.media.drivers.openal.lib_openal', 0, 0, -1), ('sys', 1, 0, -1), ('time', 0, 0, -1), ('pyglet', 1, 1, -1), ('pyglet.media.drivers.openal', 0, 0, -1)] binaries=[] datas=[]>
pyglet.media.avbin: None -> <PyModule 'pyglet.media.avbin' C:\Python27\lib\site-packages\pyglet\media\avbin.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.gl.gl_info', 0, 0, -1), ('pyglet.image', 0, 0, -1), ('pyglet.media.AudioData', 0, 0, -1), ('pyglet.media', 0, 0, -1), ('pyglet.lib', 0, 0, -1), ('pyglet.media.VideoFormat', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.media.MediaFormatException', 0, 0, -1), ('pyglet.media.AudioFormat', 0, 0, -1), ('pyglet.media.StreamingSource', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.media.time: None -> None
pyglet.media.riff: None -> <PyModule 'pyglet.media.riff' C:\Python27\lib\site-packages\pyglet\media\riff.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.media.AudioData', 0, 0, -1), ('pyglet.media', 0, 0, -1), ('StringIO', 0, 0, -1), ('struct', 0, 0, -1), ('pyglet.media.MediaFormatException', 0, 0, -1), ('pyglet.media.AudioFormat', 0, 0, -1), ('pyglet.media.StreamingSource', 0, 0, -1)] binaries=[] datas=[]>
pyglet.media.drivers.pyglet: None -> None
pyglet.media.AudioData: None -> None
  DEL pyglet.media.AudioData
pyglet.media.AudioPlayer: None -> None
  DEL pyglet.media.AudioPlayer
pyglet.media.Listener: None -> None
  DEL pyglet.media.Listener
pyglet.media.MediaException: None -> None
  DEL pyglet.media.MediaException
pyglet.media.drivers.time: None -> None
pyglet.media.drivers.alsa.ctypes: None -> None
pyglet.media.drivers.alsa.pyglet: None -> None
pyglet.media.AudioPlayer: None -> None
  DEL pyglet.media.AudioPlayer
pyglet.media.Listener: None -> None
  DEL pyglet.media.Listener
pyglet.media.MediaException: None -> None
  DEL pyglet.media.MediaException
pyglet.media.drivers.alsa.asound: None -> <PyModule 'pyglet.media.drivers.alsa.asound' C:\Python27\lib\site-packages\pyglet\media\drivers\alsa\asound.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet.lib', 0, 0, -1)] binaries=[] datas=[]>
pyglet.media.drivers.alsa.sys: None -> None
pyglet.media.drivers.directsound.pyglet: None -> None
pyglet.media.drivers.directsound.ctypes: None -> None
pyglet.media.AudioPlayer: None -> None
  DEL pyglet.media.AudioPlayer
pyglet.media.drivers.directsound.math: None -> None
pyglet.media.Listener: None -> None
  DEL pyglet.media.Listener
pyglet.media.MediaException: None -> None
  DEL pyglet.media.MediaException
pyglet.window.win32._user32: None -> None
  DEL pyglet.window.win32._user32
pyglet.media.drivers.directsound.lib_dsound: None -> <PyModule 'pyglet.media.drivers.directsound.lib_dsound' C:\Python27\lib\site-packages\pyglet\media\drivers\directsound\lib_dsound.pyc imports=[('ctypes', 0, 0, -1), ('pyglet.com', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.media.drivers.directsound.time: None -> None
pyglet.media.drivers.openal.pyglet: None -> None
pyglet.media.drivers.openal.ctypes: None -> None
pyglet.media.drivers.openal.sys: None -> None
pyglet.media.AudioPlayer: None -> None
  DEL pyglet.media.AudioPlayer
pyglet.media.Listener: None -> None
  DEL pyglet.media.Listener
pyglet.media.MediaException: None -> None
  DEL pyglet.media.MediaException
pyglet.media.drivers.openal.lib_alc: None -> <PyModule 'pyglet.media.drivers.openal.lib_alc' C:\Python27\lib\site-packages\pyglet\media\drivers\openal\lib_alc.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet.lib', 0, 0, -1)] binaries=[] datas=[]>
pyglet.media.drivers.openal.lib_openal: None -> <PyModule 'pyglet.media.drivers.openal.lib_openal' C:\Python27\lib\site-packages\pyglet\media\drivers\openal\lib_openal.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet.lib', 0, 0, -1)] binaries=[] datas=[]>
pyglet.media.drivers.openal.time: None -> None
pyglet.media.AudioData: None -> None
  DEL pyglet.media.AudioData
pyglet.media.VideoFormat: None -> None
  DEL pyglet.media.VideoFormat
pyglet.media.MediaFormatException: None -> None
  DEL pyglet.media.MediaFormatException
pyglet.media.AudioFormat: None -> None
  DEL pyglet.media.AudioFormat
pyglet.media.StreamingSource: None -> None
  DEL pyglet.media.StreamingSource
pyglet.media.AudioData: None -> None
  DEL pyglet.media.AudioData
pyglet.media.struct: None -> None
pyglet.media.MediaFormatException: None -> None
  DEL pyglet.media.MediaFormatException
pyglet.media.AudioFormat: None -> None
  DEL pyglet.media.AudioFormat
pyglet.media.StreamingSource: None -> None
  DEL pyglet.media.StreamingSource
pyglet.text.pyglet: None -> None
pyglet.text.caret: None -> <PyModule 'pyglet.text.caret' C:\Python27\lib\site-packages\pyglet\text\caret.pyc imports=[('pyglet.clock', 0, 0, -1), ('re', 0, 0, -1), ('pyglet.window', 0, 0, -1), ('pyglet', 1, 0, -1), ('pyglet.window.key', 0, 0, -1), ('pyglet.event', 0, 0, -1), ('time', 0, 0, -1), ('pyglet.gl', 1, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.text.formats: None -> <PkgModule 'pyglet.text.formats' C:\Python27\lib\site-packages\pyglet\text\formats\__init__.pyc imports=[] binaries=[] datas=[]>
pyglet.text.formats.plaintext: None -> <PyModule 'pyglet.text.formats.plaintext' C:\Python27\lib\site-packages\pyglet\text\formats\plaintext.pyc imports=[('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.text.layout: None -> <PyModule 'pyglet.text.layout' C:\Python27\lib\site-packages\pyglet\text\layout.pyc imports=[('pyglet.font.base._grapheme_break', 0, 0, -1), ('pyglet.gl.*', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet.font.base', 0, 0, -1), ('pyglet.text', 0, 0, -1), ('re', 0, 0, -1), ('pyglet.text.runlist', 0, 0, -1), ('pyglet.gl', 0, 0, -1), ('pyglet.event', 0, 0, -1), ('pyglet.graphics', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.text.os: None -> None
pyglet.text.formats.attributed: None -> <PyModule 'pyglet.text.formats.attributed' C:\Python27\lib\site-packages\pyglet\text\formats\attributed.pyc imports=[('parser', 0, 0, -1), ('re', 0, 0, -1), ('token', 0, 0, -1), ('operator', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.text.document: None -> <PyModule 'pyglet.text.document' C:\Python27\lib\site-packages\pyglet\text\document.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('pyglet.text', 0, 0, -1), ('pyglet', 1, 0, -1), ('pyglet.text.runlist', 0, 0, -1), ('pyglet.event', 0, 0, -1), ('pyglet', 0, 0, -1), ('pyglet.font', 1, 0, -1)] binaries=[] datas=[]>
pyglet.text.formats.html: None -> <PyModule 'pyglet.text.formats.html' C:\Python27\lib\site-packages\pyglet\text\formats\html.pyc imports=[('HTMLParser', 0, 0, -1), ('re', 0, 0, -1), ('pyglet.text.formats', 0, 0, -1), ('htmlentitydefs', 0, 0, -1), ('pyglet.text.formats.structured', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
pyglet.text.re: None -> None
pyglet.text.time: None -> None
pyglet.text.formats.pyglet: None -> None
pyglet.text.sys: None -> None
pyglet.text.runlist: None -> <PyModule 'pyglet.text.runlist' C:\Python27\lib\site-packages\pyglet\text\runlist.pyc imports=[] binaries=[] datas=[]>
pyglet.text.formats.parser: None -> None
parser: None -> <BuiltinModule 'parser' None imports=[('copy_reg', 0, 0, -1)] binaries=[] datas=[]>
pyglet.text.formats.re: None -> None
pyglet.text.formats.token: None -> None
pyglet.text.formats.operator: None -> None
pyglet.text.formats.HTMLParser: None -> None
HTMLParser: None -> <PyModule 'HTMLParser' C:\Python27\lib\HTMLParser.pyc imports=[('markupbase', 0, 0, -1), ('htmlentitydefs', 1, 0, -1), ('re', 0, 0, -1)] binaries=[] datas=[]>
pyglet.text.formats.htmlentitydefs: None -> None
htmlentitydefs: None -> <PyModule 'htmlentitydefs' C:\Python27\lib\htmlentitydefs.pyc imports=[] binaries=[] datas=[]>
pyglet.text.formats.structured: None -> <PyModule 'pyglet.text.formats.structured' C:\Python27\lib\site-packages\pyglet\text\formats\structured.pyc imports=[('re', 0, 0, -1), ('pyglet', 0, 0, -1)] binaries=[] datas=[]>
markupbase: None -> <PyModule 'markupbase' C:\Python27\lib\markupbase.pyc imports=[('re', 0, 0, -1)] binaries=[] datas=[]>
pyglet.math: None -> None
pwd: None -> None
  DEL pwd
__main__: <PyScript '__main__' spotify_bot_2.0.py imports=[('speech', 0, 0, -1), ('re', 0, 0, -1), ('winsound', 0, 0, -1), ('sys', 0, 0, -1), ('datetime.datetime', 0, 0, -1), ('jabberbot', 0, 0, -1), ('jabberbot.JabberBot', 0, 0, -1), ('jabberbot.botcmd', 0, 0, -1), ('thread', 0, 0, -1), ('logging', 0, 0, -1), ('pytify', 0, 0, -1), ('datetime', 0, 0, -1), ('pyglet', 0, 0, -1), ('os', 0, 0, -1), ('subprocess', 0, 0, -1), ('time', 0, 0, -1), ('pickle', 0, 0, -1), ('pytify.Spotify', 0, 0, -1), ('webbrowser', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Python27\lib\site-packages\PyInstaller\loader\rthooks\pyi_rth_win32comgenpy.py imports=[('win32com', 0, 0, -1), ('atexit', 0, 0, -1), ('win32com.gen_py', 0, 0, -1), ('shutil', 0, 0, -1), ('os', 0, 0, -1), ('tempfile', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
pwd: None -> None
  DEL pwd
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
pwd: None -> None
  DEL pwd
grp: None -> None
  DEL grp
grp: None -> None
  DEL grp
pwd: None -> None
  DEL pwd
pwd: None -> None
  DEL pwd
grp: None -> None
  DEL grp
win32com.client._get_good_object_: None -> None
  DEL win32com.client._get_good_object_
